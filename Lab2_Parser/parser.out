Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> assignment SEMICOLON
Rule 5     instruction -> call SEMICOLON
Rule 6     instruction -> loop
Rule 7     instruction -> branch
Rule 8     instruction -> LCURLBRACK instructions RCURLBRACK
Rule 9     assignment -> ID assignment_operator expression
Rule 10    assignment -> ID matrix assignment_operator expression
Rule 11    assignment_operator -> ASSIGN
Rule 12    assignment_operator -> ADDASSIGN
Rule 13    assignment_operator -> SUBASSIGN
Rule 14    assignment_operator -> MULASSIGN
Rule 15    assignment_operator -> DIVASSIGN
Rule 16    call -> BREAK
Rule 17    call -> CONTINUE
Rule 18    call -> RETURN expression
Rule 19    call -> PRINT print_inputs
Rule 20    print_inputs -> print_inputs COMMA print_input
Rule 21    print_inputs -> print_input
Rule 22    print_input -> STRING
Rule 23    print_input -> ID
Rule 24    matrix_fun -> fun_name LPARENT expression RPARENT
Rule 25    fun_name -> EYE
Rule 26    fun_name -> ZEROS
Rule 27    fun_name -> ONES
Rule 28    loop -> for
Rule 29    loop -> while
Rule 30    for -> FOR for_expression instruction
Rule 31    for_expression -> ID ASSIGN range
Rule 32    while -> WHILE LPARENT comparison RPARENT instruction
Rule 33    branch -> IF LPARENT comparison RPARENT instruction
Rule 34    branch -> IF LPARENT comparison RPARENT instruction ELSE instruction
Rule 35    range -> num_term COLON num_term
Rule 36    term -> ID
Rule 37    term -> number
Rule 38    term -> matrix
Rule 39    term -> string
Rule 40    num_term -> ID
Rule 41    num_term -> number
Rule 42    matrix_term -> ID
Rule 43    matrix_term -> matrix
Rule 44    matrix_term -> number
Rule 45    number -> INT
Rule 46    number -> FLOAT
Rule 47    string -> STRING
Rule 48    matrix -> LSQBRACK matrix_contents RSQBRACK
Rule 49    matrix -> matrix_fun
Rule 50    matrix_contents -> matrix_contents COMMA matrix_content
Rule 51    matrix_contents -> matrix_content
Rule 52    matrix_content -> matrix_term
Rule 53    expression -> term
Rule 54    expression -> LPARENT expression RPARENT
Rule 55    expression -> expression ADD expression
Rule 56    expression -> expression SUB expression
Rule 57    expression -> expression MUL expression
Rule 58    expression -> expression DIV expression
Rule 59    expression -> expression DOTADD expression
Rule 60    expression -> expression DOTSUB expression
Rule 61    expression -> expression DOTMUL expression
Rule 62    expression -> expression DOTDIV expression
Rule 63    expression -> SUB expression
Rule 64    expression -> expression TRANSPOSE
Rule 65    comparison -> expression comparison_operator expression
Rule 66    comparison_operator -> SMALLER
Rule 67    comparison_operator -> LARGER
Rule 68    comparison_operator -> SMALLEREQ
Rule 69    comparison_operator -> LARGEREQ
Rule 70    comparison_operator -> NOTEQ
Rule 71    comparison_operator -> EQ

Terminals, with rules where they appear

ADD                  : 55
ADDASSIGN            : 12
ASSIGN               : 11 31
BREAK                : 16
COLON                : 35
COMMA                : 20 50
CONTINUE             : 17
DIV                  : 58
DIVASSIGN            : 15
DOTADD               : 59
DOTDIV               : 62
DOTMUL               : 61
DOTSUB               : 60
ELSE                 : 34
EQ                   : 71
EYE                  : 25
FLOAT                : 46
FOR                  : 30
ID                   : 9 10 23 31 36 40 42
IF                   : 33 34
INT                  : 45
LARGER               : 67
LARGEREQ             : 69
LCURLBRACK           : 8
LPARENT              : 24 32 33 34 54
LSQBRACK             : 48
MUL                  : 57
MULASSIGN            : 14
NOTEQ                : 70
ONES                 : 27
PRINT                : 19
RCURLBRACK           : 8
RETURN               : 18
RPARENT              : 24 32 33 34 54
RSQBRACK             : 48
SEMICOLON            : 4 5
SMALLER              : 66
SMALLEREQ            : 68
STRING               : 22 47
SUB                  : 56 63
SUBASSIGN            : 13
TRANSPOSE            : 64
WHILE                : 32
ZEROS                : 26
error                : 

Nonterminals, with rules where they appear

assignment           : 4
assignment_operator  : 9 10
branch               : 7
call                 : 5
comparison           : 32 33 34
comparison_operator  : 65
expression           : 9 10 18 24 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 64 65 65
for                  : 28
for_expression       : 30
fun_name             : 24
instruction          : 2 3 30 32 33 34 34
instructions         : 1 2 8
loop                 : 6
matrix               : 10 38 43
matrix_content       : 50 51
matrix_contents      : 48 50
matrix_fun           : 49
matrix_term          : 52
num_term             : 35 35
number               : 37 41 44
print_input          : 20 21
print_inputs         : 19 20
program              : 0
range                : 31
string               : 39
term                 : 53
while                : 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    $end            reduce using rule 1 (program -> instructions .)
    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instruction                    shift and go to state 19
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 3

    (3) instructions -> instruction .

    LCURLBRACK      reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    FOR             reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    RCURLBRACK      reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 20


state 5

    (5) instruction -> call . SEMICOLON

    SEMICOLON       shift and go to state 21


state 6

    (6) instruction -> loop .

    LCURLBRACK      reduce using rule 6 (instruction -> loop .)
    ID              reduce using rule 6 (instruction -> loop .)
    BREAK           reduce using rule 6 (instruction -> loop .)
    CONTINUE        reduce using rule 6 (instruction -> loop .)
    RETURN          reduce using rule 6 (instruction -> loop .)
    PRINT           reduce using rule 6 (instruction -> loop .)
    IF              reduce using rule 6 (instruction -> loop .)
    FOR             reduce using rule 6 (instruction -> loop .)
    WHILE           reduce using rule 6 (instruction -> loop .)
    $end            reduce using rule 6 (instruction -> loop .)
    RCURLBRACK      reduce using rule 6 (instruction -> loop .)
    ELSE            reduce using rule 6 (instruction -> loop .)


state 7

    (7) instruction -> branch .

    LCURLBRACK      reduce using rule 7 (instruction -> branch .)
    ID              reduce using rule 7 (instruction -> branch .)
    BREAK           reduce using rule 7 (instruction -> branch .)
    CONTINUE        reduce using rule 7 (instruction -> branch .)
    RETURN          reduce using rule 7 (instruction -> branch .)
    PRINT           reduce using rule 7 (instruction -> branch .)
    IF              reduce using rule 7 (instruction -> branch .)
    FOR             reduce using rule 7 (instruction -> branch .)
    WHILE           reduce using rule 7 (instruction -> branch .)
    $end            reduce using rule 7 (instruction -> branch .)
    RCURLBRACK      reduce using rule 7 (instruction -> branch .)
    ELSE            reduce using rule 7 (instruction -> branch .)


state 8

    (8) instruction -> LCURLBRACK . instructions RCURLBRACK
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instructions                   shift and go to state 22
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 9

    (9) assignment -> ID . assignment_operator expression
    (10) assignment -> ID . matrix assignment_operator expression
    (11) assignment_operator -> . ASSIGN
    (12) assignment_operator -> . ADDASSIGN
    (13) assignment_operator -> . SUBASSIGN
    (14) assignment_operator -> . MULASSIGN
    (15) assignment_operator -> . DIVASSIGN
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    ASSIGN          shift and go to state 25
    ADDASSIGN       shift and go to state 26
    SUBASSIGN       shift and go to state 27
    MULASSIGN       shift and go to state 28
    DIVASSIGN       shift and go to state 29
    LSQBRACK        shift and go to state 30
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    assignment_operator            shift and go to state 23
    matrix                         shift and go to state 24
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 10

    (16) call -> BREAK .

    SEMICOLON       reduce using rule 16 (call -> BREAK .)


state 11

    (17) call -> CONTINUE .

    SEMICOLON       reduce using rule 17 (call -> CONTINUE .)


state 12

    (18) call -> RETURN . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 36
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 13

    (19) call -> PRINT . print_inputs
    (20) print_inputs -> . print_inputs COMMA print_input
    (21) print_inputs -> . print_input
    (22) print_input -> . STRING
    (23) print_input -> . ID

    STRING          shift and go to state 49
    ID              shift and go to state 50

    print_inputs                   shift and go to state 47
    print_input                    shift and go to state 48

state 14

    (28) loop -> for .

    LCURLBRACK      reduce using rule 28 (loop -> for .)
    ID              reduce using rule 28 (loop -> for .)
    BREAK           reduce using rule 28 (loop -> for .)
    CONTINUE        reduce using rule 28 (loop -> for .)
    RETURN          reduce using rule 28 (loop -> for .)
    PRINT           reduce using rule 28 (loop -> for .)
    IF              reduce using rule 28 (loop -> for .)
    FOR             reduce using rule 28 (loop -> for .)
    WHILE           reduce using rule 28 (loop -> for .)
    $end            reduce using rule 28 (loop -> for .)
    RCURLBRACK      reduce using rule 28 (loop -> for .)
    ELSE            reduce using rule 28 (loop -> for .)


state 15

    (29) loop -> while .

    LCURLBRACK      reduce using rule 29 (loop -> while .)
    ID              reduce using rule 29 (loop -> while .)
    BREAK           reduce using rule 29 (loop -> while .)
    CONTINUE        reduce using rule 29 (loop -> while .)
    RETURN          reduce using rule 29 (loop -> while .)
    PRINT           reduce using rule 29 (loop -> while .)
    IF              reduce using rule 29 (loop -> while .)
    FOR             reduce using rule 29 (loop -> while .)
    WHILE           reduce using rule 29 (loop -> while .)
    $end            reduce using rule 29 (loop -> while .)
    RCURLBRACK      reduce using rule 29 (loop -> while .)
    ELSE            reduce using rule 29 (loop -> while .)


state 16

    (33) branch -> IF . LPARENT comparison RPARENT instruction
    (34) branch -> IF . LPARENT comparison RPARENT instruction ELSE instruction

    LPARENT         shift and go to state 51


state 17

    (30) for -> FOR . for_expression instruction
    (31) for_expression -> . ID ASSIGN range

    ID              shift and go to state 53

    for_expression                 shift and go to state 52

state 18

    (32) while -> WHILE . LPARENT comparison RPARENT instruction

    LPARENT         shift and go to state 54


state 19

    (2) instructions -> instructions instruction .

    LCURLBRACK      reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    RCURLBRACK      reduce using rule 2 (instructions -> instructions instruction .)


state 20

    (4) instruction -> assignment SEMICOLON .

    LCURLBRACK      reduce using rule 4 (instruction -> assignment SEMICOLON .)
    ID              reduce using rule 4 (instruction -> assignment SEMICOLON .)
    BREAK           reduce using rule 4 (instruction -> assignment SEMICOLON .)
    CONTINUE        reduce using rule 4 (instruction -> assignment SEMICOLON .)
    RETURN          reduce using rule 4 (instruction -> assignment SEMICOLON .)
    PRINT           reduce using rule 4 (instruction -> assignment SEMICOLON .)
    IF              reduce using rule 4 (instruction -> assignment SEMICOLON .)
    FOR             reduce using rule 4 (instruction -> assignment SEMICOLON .)
    WHILE           reduce using rule 4 (instruction -> assignment SEMICOLON .)
    $end            reduce using rule 4 (instruction -> assignment SEMICOLON .)
    RCURLBRACK      reduce using rule 4 (instruction -> assignment SEMICOLON .)
    ELSE            reduce using rule 4 (instruction -> assignment SEMICOLON .)


state 21

    (5) instruction -> call SEMICOLON .

    LCURLBRACK      reduce using rule 5 (instruction -> call SEMICOLON .)
    ID              reduce using rule 5 (instruction -> call SEMICOLON .)
    BREAK           reduce using rule 5 (instruction -> call SEMICOLON .)
    CONTINUE        reduce using rule 5 (instruction -> call SEMICOLON .)
    RETURN          reduce using rule 5 (instruction -> call SEMICOLON .)
    PRINT           reduce using rule 5 (instruction -> call SEMICOLON .)
    IF              reduce using rule 5 (instruction -> call SEMICOLON .)
    FOR             reduce using rule 5 (instruction -> call SEMICOLON .)
    WHILE           reduce using rule 5 (instruction -> call SEMICOLON .)
    $end            reduce using rule 5 (instruction -> call SEMICOLON .)
    RCURLBRACK      reduce using rule 5 (instruction -> call SEMICOLON .)
    ELSE            reduce using rule 5 (instruction -> call SEMICOLON .)


state 22

    (8) instruction -> LCURLBRACK instructions . RCURLBRACK
    (2) instructions -> instructions . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    RCURLBRACK      shift and go to state 55
    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instruction                    shift and go to state 19
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 23

    (9) assignment -> ID assignment_operator . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 56
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 24

    (10) assignment -> ID matrix . assignment_operator expression
    (11) assignment_operator -> . ASSIGN
    (12) assignment_operator -> . ADDASSIGN
    (13) assignment_operator -> . SUBASSIGN
    (14) assignment_operator -> . MULASSIGN
    (15) assignment_operator -> . DIVASSIGN

    ASSIGN          shift and go to state 25
    ADDASSIGN       shift and go to state 26
    SUBASSIGN       shift and go to state 27
    MULASSIGN       shift and go to state 28
    DIVASSIGN       shift and go to state 29

    assignment_operator            shift and go to state 57

state 25

    (11) assignment_operator -> ASSIGN .

    LPARENT         reduce using rule 11 (assignment_operator -> ASSIGN .)
    SUB             reduce using rule 11 (assignment_operator -> ASSIGN .)
    ID              reduce using rule 11 (assignment_operator -> ASSIGN .)
    INT             reduce using rule 11 (assignment_operator -> ASSIGN .)
    FLOAT           reduce using rule 11 (assignment_operator -> ASSIGN .)
    LSQBRACK        reduce using rule 11 (assignment_operator -> ASSIGN .)
    STRING          reduce using rule 11 (assignment_operator -> ASSIGN .)
    EYE             reduce using rule 11 (assignment_operator -> ASSIGN .)
    ZEROS           reduce using rule 11 (assignment_operator -> ASSIGN .)
    ONES            reduce using rule 11 (assignment_operator -> ASSIGN .)


state 26

    (12) assignment_operator -> ADDASSIGN .

    LPARENT         reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    SUB             reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    ID              reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    INT             reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    FLOAT           reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    LSQBRACK        reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    STRING          reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    EYE             reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    ZEROS           reduce using rule 12 (assignment_operator -> ADDASSIGN .)
    ONES            reduce using rule 12 (assignment_operator -> ADDASSIGN .)


state 27

    (13) assignment_operator -> SUBASSIGN .

    LPARENT         reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    SUB             reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    ID              reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    INT             reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    FLOAT           reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    LSQBRACK        reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    STRING          reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    EYE             reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    ZEROS           reduce using rule 13 (assignment_operator -> SUBASSIGN .)
    ONES            reduce using rule 13 (assignment_operator -> SUBASSIGN .)


state 28

    (14) assignment_operator -> MULASSIGN .

    LPARENT         reduce using rule 14 (assignment_operator -> MULASSIGN .)
    SUB             reduce using rule 14 (assignment_operator -> MULASSIGN .)
    ID              reduce using rule 14 (assignment_operator -> MULASSIGN .)
    INT             reduce using rule 14 (assignment_operator -> MULASSIGN .)
    FLOAT           reduce using rule 14 (assignment_operator -> MULASSIGN .)
    LSQBRACK        reduce using rule 14 (assignment_operator -> MULASSIGN .)
    STRING          reduce using rule 14 (assignment_operator -> MULASSIGN .)
    EYE             reduce using rule 14 (assignment_operator -> MULASSIGN .)
    ZEROS           reduce using rule 14 (assignment_operator -> MULASSIGN .)
    ONES            reduce using rule 14 (assignment_operator -> MULASSIGN .)


state 29

    (15) assignment_operator -> DIVASSIGN .

    LPARENT         reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    SUB             reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    ID              reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    INT             reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    FLOAT           reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    LSQBRACK        reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    STRING          reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    EYE             reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    ZEROS           reduce using rule 15 (assignment_operator -> DIVASSIGN .)
    ONES            reduce using rule 15 (assignment_operator -> DIVASSIGN .)


state 30

    (48) matrix -> LSQBRACK . matrix_contents RSQBRACK
    (50) matrix_contents -> . matrix_contents COMMA matrix_content
    (51) matrix_contents -> . matrix_content
    (52) matrix_content -> . matrix_term
    (42) matrix_term -> . ID
    (43) matrix_term -> . matrix
    (44) matrix_term -> . number
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (45) number -> . INT
    (46) number -> . FLOAT
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    ID              shift and go to state 61
    LSQBRACK        shift and go to state 30
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    matrix_contents                shift and go to state 58
    matrix_content                 shift and go to state 59
    matrix_term                    shift and go to state 60
    matrix                         shift and go to state 62
    number                         shift and go to state 63
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 31

    (49) matrix -> matrix_fun .

    ASSIGN          reduce using rule 49 (matrix -> matrix_fun .)
    ADDASSIGN       reduce using rule 49 (matrix -> matrix_fun .)
    SUBASSIGN       reduce using rule 49 (matrix -> matrix_fun .)
    MULASSIGN       reduce using rule 49 (matrix -> matrix_fun .)
    DIVASSIGN       reduce using rule 49 (matrix -> matrix_fun .)
    ADD             reduce using rule 49 (matrix -> matrix_fun .)
    SUB             reduce using rule 49 (matrix -> matrix_fun .)
    MUL             reduce using rule 49 (matrix -> matrix_fun .)
    DIV             reduce using rule 49 (matrix -> matrix_fun .)
    DOTADD          reduce using rule 49 (matrix -> matrix_fun .)
    DOTSUB          reduce using rule 49 (matrix -> matrix_fun .)
    DOTMUL          reduce using rule 49 (matrix -> matrix_fun .)
    DOTDIV          reduce using rule 49 (matrix -> matrix_fun .)
    TRANSPOSE       reduce using rule 49 (matrix -> matrix_fun .)
    SEMICOLON       reduce using rule 49 (matrix -> matrix_fun .)
    RSQBRACK        reduce using rule 49 (matrix -> matrix_fun .)
    COMMA           reduce using rule 49 (matrix -> matrix_fun .)
    RPARENT         reduce using rule 49 (matrix -> matrix_fun .)
    SMALLER         reduce using rule 49 (matrix -> matrix_fun .)
    LARGER          reduce using rule 49 (matrix -> matrix_fun .)
    SMALLEREQ       reduce using rule 49 (matrix -> matrix_fun .)
    LARGEREQ        reduce using rule 49 (matrix -> matrix_fun .)
    NOTEQ           reduce using rule 49 (matrix -> matrix_fun .)
    EQ              reduce using rule 49 (matrix -> matrix_fun .)


state 32

    (24) matrix_fun -> fun_name . LPARENT expression RPARENT

    LPARENT         shift and go to state 64


state 33

    (25) fun_name -> EYE .

    LPARENT         reduce using rule 25 (fun_name -> EYE .)


state 34

    (26) fun_name -> ZEROS .

    LPARENT         reduce using rule 26 (fun_name -> ZEROS .)


state 35

    (27) fun_name -> ONES .

    LPARENT         reduce using rule 27 (fun_name -> ONES .)


state 36

    (18) call -> RETURN expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    SEMICOLON       reduce using rule 18 (call -> RETURN expression .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73


state 37

    (53) expression -> term .

    ADD             reduce using rule 53 (expression -> term .)
    SUB             reduce using rule 53 (expression -> term .)
    MUL             reduce using rule 53 (expression -> term .)
    DIV             reduce using rule 53 (expression -> term .)
    DOTADD          reduce using rule 53 (expression -> term .)
    DOTSUB          reduce using rule 53 (expression -> term .)
    DOTMUL          reduce using rule 53 (expression -> term .)
    DOTDIV          reduce using rule 53 (expression -> term .)
    TRANSPOSE       reduce using rule 53 (expression -> term .)
    SEMICOLON       reduce using rule 53 (expression -> term .)
    RPARENT         reduce using rule 53 (expression -> term .)
    SMALLER         reduce using rule 53 (expression -> term .)
    LARGER          reduce using rule 53 (expression -> term .)
    SMALLEREQ       reduce using rule 53 (expression -> term .)
    LARGEREQ        reduce using rule 53 (expression -> term .)
    NOTEQ           reduce using rule 53 (expression -> term .)
    EQ              reduce using rule 53 (expression -> term .)


state 38

    (54) expression -> LPARENT . expression RPARENT
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 74
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 39

    (63) expression -> SUB . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 75
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 40

    (36) term -> ID .

    ADD             reduce using rule 36 (term -> ID .)
    SUB             reduce using rule 36 (term -> ID .)
    MUL             reduce using rule 36 (term -> ID .)
    DIV             reduce using rule 36 (term -> ID .)
    DOTADD          reduce using rule 36 (term -> ID .)
    DOTSUB          reduce using rule 36 (term -> ID .)
    DOTMUL          reduce using rule 36 (term -> ID .)
    DOTDIV          reduce using rule 36 (term -> ID .)
    TRANSPOSE       reduce using rule 36 (term -> ID .)
    SEMICOLON       reduce using rule 36 (term -> ID .)
    RPARENT         reduce using rule 36 (term -> ID .)
    SMALLER         reduce using rule 36 (term -> ID .)
    LARGER          reduce using rule 36 (term -> ID .)
    SMALLEREQ       reduce using rule 36 (term -> ID .)
    LARGEREQ        reduce using rule 36 (term -> ID .)
    NOTEQ           reduce using rule 36 (term -> ID .)
    EQ              reduce using rule 36 (term -> ID .)


state 41

    (37) term -> number .

    ADD             reduce using rule 37 (term -> number .)
    SUB             reduce using rule 37 (term -> number .)
    MUL             reduce using rule 37 (term -> number .)
    DIV             reduce using rule 37 (term -> number .)
    DOTADD          reduce using rule 37 (term -> number .)
    DOTSUB          reduce using rule 37 (term -> number .)
    DOTMUL          reduce using rule 37 (term -> number .)
    DOTDIV          reduce using rule 37 (term -> number .)
    TRANSPOSE       reduce using rule 37 (term -> number .)
    SEMICOLON       reduce using rule 37 (term -> number .)
    RPARENT         reduce using rule 37 (term -> number .)
    SMALLER         reduce using rule 37 (term -> number .)
    LARGER          reduce using rule 37 (term -> number .)
    SMALLEREQ       reduce using rule 37 (term -> number .)
    LARGEREQ        reduce using rule 37 (term -> number .)
    NOTEQ           reduce using rule 37 (term -> number .)
    EQ              reduce using rule 37 (term -> number .)


state 42

    (38) term -> matrix .

    ADD             reduce using rule 38 (term -> matrix .)
    SUB             reduce using rule 38 (term -> matrix .)
    MUL             reduce using rule 38 (term -> matrix .)
    DIV             reduce using rule 38 (term -> matrix .)
    DOTADD          reduce using rule 38 (term -> matrix .)
    DOTSUB          reduce using rule 38 (term -> matrix .)
    DOTMUL          reduce using rule 38 (term -> matrix .)
    DOTDIV          reduce using rule 38 (term -> matrix .)
    TRANSPOSE       reduce using rule 38 (term -> matrix .)
    SEMICOLON       reduce using rule 38 (term -> matrix .)
    RPARENT         reduce using rule 38 (term -> matrix .)
    SMALLER         reduce using rule 38 (term -> matrix .)
    LARGER          reduce using rule 38 (term -> matrix .)
    SMALLEREQ       reduce using rule 38 (term -> matrix .)
    LARGEREQ        reduce using rule 38 (term -> matrix .)
    NOTEQ           reduce using rule 38 (term -> matrix .)
    EQ              reduce using rule 38 (term -> matrix .)


state 43

    (39) term -> string .

    ADD             reduce using rule 39 (term -> string .)
    SUB             reduce using rule 39 (term -> string .)
    MUL             reduce using rule 39 (term -> string .)
    DIV             reduce using rule 39 (term -> string .)
    DOTADD          reduce using rule 39 (term -> string .)
    DOTSUB          reduce using rule 39 (term -> string .)
    DOTMUL          reduce using rule 39 (term -> string .)
    DOTDIV          reduce using rule 39 (term -> string .)
    TRANSPOSE       reduce using rule 39 (term -> string .)
    SEMICOLON       reduce using rule 39 (term -> string .)
    RPARENT         reduce using rule 39 (term -> string .)
    SMALLER         reduce using rule 39 (term -> string .)
    LARGER          reduce using rule 39 (term -> string .)
    SMALLEREQ       reduce using rule 39 (term -> string .)
    LARGEREQ        reduce using rule 39 (term -> string .)
    NOTEQ           reduce using rule 39 (term -> string .)
    EQ              reduce using rule 39 (term -> string .)


state 44

    (45) number -> INT .

    ADD             reduce using rule 45 (number -> INT .)
    SUB             reduce using rule 45 (number -> INT .)
    MUL             reduce using rule 45 (number -> INT .)
    DIV             reduce using rule 45 (number -> INT .)
    DOTADD          reduce using rule 45 (number -> INT .)
    DOTSUB          reduce using rule 45 (number -> INT .)
    DOTMUL          reduce using rule 45 (number -> INT .)
    DOTDIV          reduce using rule 45 (number -> INT .)
    TRANSPOSE       reduce using rule 45 (number -> INT .)
    SEMICOLON       reduce using rule 45 (number -> INT .)
    RSQBRACK        reduce using rule 45 (number -> INT .)
    COMMA           reduce using rule 45 (number -> INT .)
    RPARENT         reduce using rule 45 (number -> INT .)
    SMALLER         reduce using rule 45 (number -> INT .)
    LARGER          reduce using rule 45 (number -> INT .)
    SMALLEREQ       reduce using rule 45 (number -> INT .)
    LARGEREQ        reduce using rule 45 (number -> INT .)
    NOTEQ           reduce using rule 45 (number -> INT .)
    EQ              reduce using rule 45 (number -> INT .)
    COLON           reduce using rule 45 (number -> INT .)
    LCURLBRACK      reduce using rule 45 (number -> INT .)
    ID              reduce using rule 45 (number -> INT .)
    BREAK           reduce using rule 45 (number -> INT .)
    CONTINUE        reduce using rule 45 (number -> INT .)
    RETURN          reduce using rule 45 (number -> INT .)
    PRINT           reduce using rule 45 (number -> INT .)
    IF              reduce using rule 45 (number -> INT .)
    FOR             reduce using rule 45 (number -> INT .)
    WHILE           reduce using rule 45 (number -> INT .)


state 45

    (46) number -> FLOAT .

    ADD             reduce using rule 46 (number -> FLOAT .)
    SUB             reduce using rule 46 (number -> FLOAT .)
    MUL             reduce using rule 46 (number -> FLOAT .)
    DIV             reduce using rule 46 (number -> FLOAT .)
    DOTADD          reduce using rule 46 (number -> FLOAT .)
    DOTSUB          reduce using rule 46 (number -> FLOAT .)
    DOTMUL          reduce using rule 46 (number -> FLOAT .)
    DOTDIV          reduce using rule 46 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 46 (number -> FLOAT .)
    SEMICOLON       reduce using rule 46 (number -> FLOAT .)
    RSQBRACK        reduce using rule 46 (number -> FLOAT .)
    COMMA           reduce using rule 46 (number -> FLOAT .)
    RPARENT         reduce using rule 46 (number -> FLOAT .)
    SMALLER         reduce using rule 46 (number -> FLOAT .)
    LARGER          reduce using rule 46 (number -> FLOAT .)
    SMALLEREQ       reduce using rule 46 (number -> FLOAT .)
    LARGEREQ        reduce using rule 46 (number -> FLOAT .)
    NOTEQ           reduce using rule 46 (number -> FLOAT .)
    EQ              reduce using rule 46 (number -> FLOAT .)
    COLON           reduce using rule 46 (number -> FLOAT .)
    LCURLBRACK      reduce using rule 46 (number -> FLOAT .)
    ID              reduce using rule 46 (number -> FLOAT .)
    BREAK           reduce using rule 46 (number -> FLOAT .)
    CONTINUE        reduce using rule 46 (number -> FLOAT .)
    RETURN          reduce using rule 46 (number -> FLOAT .)
    PRINT           reduce using rule 46 (number -> FLOAT .)
    IF              reduce using rule 46 (number -> FLOAT .)
    FOR             reduce using rule 46 (number -> FLOAT .)
    WHILE           reduce using rule 46 (number -> FLOAT .)


state 46

    (47) string -> STRING .

    ADD             reduce using rule 47 (string -> STRING .)
    SUB             reduce using rule 47 (string -> STRING .)
    MUL             reduce using rule 47 (string -> STRING .)
    DIV             reduce using rule 47 (string -> STRING .)
    DOTADD          reduce using rule 47 (string -> STRING .)
    DOTSUB          reduce using rule 47 (string -> STRING .)
    DOTMUL          reduce using rule 47 (string -> STRING .)
    DOTDIV          reduce using rule 47 (string -> STRING .)
    TRANSPOSE       reduce using rule 47 (string -> STRING .)
    SEMICOLON       reduce using rule 47 (string -> STRING .)
    RPARENT         reduce using rule 47 (string -> STRING .)
    SMALLER         reduce using rule 47 (string -> STRING .)
    LARGER          reduce using rule 47 (string -> STRING .)
    SMALLEREQ       reduce using rule 47 (string -> STRING .)
    LARGEREQ        reduce using rule 47 (string -> STRING .)
    NOTEQ           reduce using rule 47 (string -> STRING .)
    EQ              reduce using rule 47 (string -> STRING .)


state 47

    (19) call -> PRINT print_inputs .
    (20) print_inputs -> print_inputs . COMMA print_input

    SEMICOLON       reduce using rule 19 (call -> PRINT print_inputs .)
    COMMA           shift and go to state 76


state 48

    (21) print_inputs -> print_input .

    COMMA           reduce using rule 21 (print_inputs -> print_input .)
    SEMICOLON       reduce using rule 21 (print_inputs -> print_input .)


state 49

    (22) print_input -> STRING .

    COMMA           reduce using rule 22 (print_input -> STRING .)
    SEMICOLON       reduce using rule 22 (print_input -> STRING .)


state 50

    (23) print_input -> ID .

    COMMA           reduce using rule 23 (print_input -> ID .)
    SEMICOLON       reduce using rule 23 (print_input -> ID .)


state 51

    (33) branch -> IF LPARENT . comparison RPARENT instruction
    (34) branch -> IF LPARENT . comparison RPARENT instruction ELSE instruction
    (65) comparison -> . expression comparison_operator expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    comparison                     shift and go to state 77
    expression                     shift and go to state 78
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 52

    (30) for -> FOR for_expression . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instruction                    shift and go to state 79
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 53

    (31) for_expression -> ID . ASSIGN range

    ASSIGN          shift and go to state 80


state 54

    (32) while -> WHILE LPARENT . comparison RPARENT instruction
    (65) comparison -> . expression comparison_operator expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    comparison                     shift and go to state 81
    expression                     shift and go to state 78
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 55

    (8) instruction -> LCURLBRACK instructions RCURLBRACK .

    LCURLBRACK      reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    ID              reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    BREAK           reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    CONTINUE        reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    RETURN          reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    PRINT           reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    IF              reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    FOR             reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    WHILE           reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    $end            reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    RCURLBRACK      reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    ELSE            reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)


state 56

    (9) assignment -> ID assignment_operator expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    SEMICOLON       reduce using rule 9 (assignment -> ID assignment_operator expression .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73


state 57

    (10) assignment -> ID matrix assignment_operator . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    matrix                         shift and go to state 42
    expression                     shift and go to state 82
    term                           shift and go to state 37
    number                         shift and go to state 41
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 58

    (48) matrix -> LSQBRACK matrix_contents . RSQBRACK
    (50) matrix_contents -> matrix_contents . COMMA matrix_content

    RSQBRACK        shift and go to state 83
    COMMA           shift and go to state 84


state 59

    (51) matrix_contents -> matrix_content .

    RSQBRACK        reduce using rule 51 (matrix_contents -> matrix_content .)
    COMMA           reduce using rule 51 (matrix_contents -> matrix_content .)


state 60

    (52) matrix_content -> matrix_term .

    RSQBRACK        reduce using rule 52 (matrix_content -> matrix_term .)
    COMMA           reduce using rule 52 (matrix_content -> matrix_term .)


state 61

    (42) matrix_term -> ID .

    RSQBRACK        reduce using rule 42 (matrix_term -> ID .)
    COMMA           reduce using rule 42 (matrix_term -> ID .)


state 62

    (43) matrix_term -> matrix .

    RSQBRACK        reduce using rule 43 (matrix_term -> matrix .)
    COMMA           reduce using rule 43 (matrix_term -> matrix .)


state 63

    (44) matrix_term -> number .

    RSQBRACK        reduce using rule 44 (matrix_term -> number .)
    COMMA           reduce using rule 44 (matrix_term -> number .)


state 64

    (24) matrix_fun -> fun_name LPARENT . expression RPARENT
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    fun_name                       shift and go to state 32
    expression                     shift and go to state 85
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31

state 65

    (55) expression -> expression ADD . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 86
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 66

    (56) expression -> expression SUB . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 87
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 67

    (57) expression -> expression MUL . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 88
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 68

    (58) expression -> expression DIV . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 89
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 69

    (59) expression -> expression DOTADD . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 90
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 70

    (60) expression -> expression DOTSUB . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 91
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 71

    (61) expression -> expression DOTMUL . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 92
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 72

    (62) expression -> expression DOTDIV . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 93
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 73

    (64) expression -> expression TRANSPOSE .

    ADD             reduce using rule 64 (expression -> expression TRANSPOSE .)
    SUB             reduce using rule 64 (expression -> expression TRANSPOSE .)
    MUL             reduce using rule 64 (expression -> expression TRANSPOSE .)
    DIV             reduce using rule 64 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 64 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 64 (expression -> expression TRANSPOSE .)
    DOTMUL          reduce using rule 64 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 64 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 64 (expression -> expression TRANSPOSE .)
    SEMICOLON       reduce using rule 64 (expression -> expression TRANSPOSE .)
    RPARENT         reduce using rule 64 (expression -> expression TRANSPOSE .)
    SMALLER         reduce using rule 64 (expression -> expression TRANSPOSE .)
    LARGER          reduce using rule 64 (expression -> expression TRANSPOSE .)
    SMALLEREQ       reduce using rule 64 (expression -> expression TRANSPOSE .)
    LARGEREQ        reduce using rule 64 (expression -> expression TRANSPOSE .)
    NOTEQ           reduce using rule 64 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 64 (expression -> expression TRANSPOSE .)


state 74

    (54) expression -> LPARENT expression . RPARENT
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    RPARENT         shift and go to state 94
    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73


state 75

    (63) expression -> SUB expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 63 (expression -> SUB expression .)
    SUB             reduce using rule 63 (expression -> SUB expression .)
    MUL             reduce using rule 63 (expression -> SUB expression .)
    DIV             reduce using rule 63 (expression -> SUB expression .)
    DOTADD          reduce using rule 63 (expression -> SUB expression .)
    DOTSUB          reduce using rule 63 (expression -> SUB expression .)
    DOTMUL          reduce using rule 63 (expression -> SUB expression .)
    DOTDIV          reduce using rule 63 (expression -> SUB expression .)
    SEMICOLON       reduce using rule 63 (expression -> SUB expression .)
    RPARENT         reduce using rule 63 (expression -> SUB expression .)
    SMALLER         reduce using rule 63 (expression -> SUB expression .)
    LARGER          reduce using rule 63 (expression -> SUB expression .)
    SMALLEREQ       reduce using rule 63 (expression -> SUB expression .)
    LARGEREQ        reduce using rule 63 (expression -> SUB expression .)
    NOTEQ           reduce using rule 63 (expression -> SUB expression .)
    EQ              reduce using rule 63 (expression -> SUB expression .)
    TRANSPOSE       shift and go to state 73

  ! TRANSPOSE       [ reduce using rule 63 (expression -> SUB expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! DIV             [ shift and go to state 68 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]
  ! DOTMUL          [ shift and go to state 71 ]
  ! DOTDIV          [ shift and go to state 72 ]


state 76

    (20) print_inputs -> print_inputs COMMA . print_input
    (22) print_input -> . STRING
    (23) print_input -> . ID

    STRING          shift and go to state 49
    ID              shift and go to state 50

    print_input                    shift and go to state 95

state 77

    (33) branch -> IF LPARENT comparison . RPARENT instruction
    (34) branch -> IF LPARENT comparison . RPARENT instruction ELSE instruction

    RPARENT         shift and go to state 96


state 78

    (65) comparison -> expression . comparison_operator expression
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE
    (66) comparison_operator -> . SMALLER
    (67) comparison_operator -> . LARGER
    (68) comparison_operator -> . SMALLEREQ
    (69) comparison_operator -> . LARGEREQ
    (70) comparison_operator -> . NOTEQ
    (71) comparison_operator -> . EQ

    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73
    SMALLER         shift and go to state 98
    LARGER          shift and go to state 99
    SMALLEREQ       shift and go to state 100
    LARGEREQ        shift and go to state 101
    NOTEQ           shift and go to state 102
    EQ              shift and go to state 103

    comparison_operator            shift and go to state 97

state 79

    (30) for -> FOR for_expression instruction .

    LCURLBRACK      reduce using rule 30 (for -> FOR for_expression instruction .)
    ID              reduce using rule 30 (for -> FOR for_expression instruction .)
    BREAK           reduce using rule 30 (for -> FOR for_expression instruction .)
    CONTINUE        reduce using rule 30 (for -> FOR for_expression instruction .)
    RETURN          reduce using rule 30 (for -> FOR for_expression instruction .)
    PRINT           reduce using rule 30 (for -> FOR for_expression instruction .)
    IF              reduce using rule 30 (for -> FOR for_expression instruction .)
    FOR             reduce using rule 30 (for -> FOR for_expression instruction .)
    WHILE           reduce using rule 30 (for -> FOR for_expression instruction .)
    $end            reduce using rule 30 (for -> FOR for_expression instruction .)
    RCURLBRACK      reduce using rule 30 (for -> FOR for_expression instruction .)
    ELSE            reduce using rule 30 (for -> FOR for_expression instruction .)


state 80

    (31) for_expression -> ID ASSIGN . range
    (35) range -> . num_term COLON num_term
    (40) num_term -> . ID
    (41) num_term -> . number
    (45) number -> . INT
    (46) number -> . FLOAT

    ID              shift and go to state 104
    INT             shift and go to state 44
    FLOAT           shift and go to state 45

    range                          shift and go to state 105
    num_term                       shift and go to state 106
    number                         shift and go to state 107

state 81

    (32) while -> WHILE LPARENT comparison . RPARENT instruction

    RPARENT         shift and go to state 108


state 82

    (10) assignment -> ID matrix assignment_operator expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    SEMICOLON       reduce using rule 10 (assignment -> ID matrix assignment_operator expression .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73


state 83

    (48) matrix -> LSQBRACK matrix_contents RSQBRACK .

    ASSIGN          reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    ADDASSIGN       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    SUBASSIGN       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    MULASSIGN       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    DIVASSIGN       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    ADD             reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    SUB             reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    MUL             reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    DIV             reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    DOTADD          reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    DOTSUB          reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    DOTMUL          reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    DOTDIV          reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    TRANSPOSE       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    SEMICOLON       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    RSQBRACK        reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    COMMA           reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    RPARENT         reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    SMALLER         reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    LARGER          reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    SMALLEREQ       reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    LARGEREQ        reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    NOTEQ           reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)
    EQ              reduce using rule 48 (matrix -> LSQBRACK matrix_contents RSQBRACK .)


state 84

    (50) matrix_contents -> matrix_contents COMMA . matrix_content
    (52) matrix_content -> . matrix_term
    (42) matrix_term -> . ID
    (43) matrix_term -> . matrix
    (44) matrix_term -> . number
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (45) number -> . INT
    (46) number -> . FLOAT
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    ID              shift and go to state 61
    LSQBRACK        shift and go to state 30
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    matrix_content                 shift and go to state 109
    matrix_term                    shift and go to state 60
    matrix                         shift and go to state 62
    number                         shift and go to state 63
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 85

    (24) matrix_fun -> fun_name LPARENT expression . RPARENT
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    RPARENT         shift and go to state 110
    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73


state 86

    (55) expression -> expression ADD expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 55 (expression -> expression ADD expression .)
    SUB             reduce using rule 55 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 55 (expression -> expression ADD expression .)
    DOTSUB          reduce using rule 55 (expression -> expression ADD expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression ADD expression .)
    RPARENT         reduce using rule 55 (expression -> expression ADD expression .)
    SMALLER         reduce using rule 55 (expression -> expression ADD expression .)
    LARGER          reduce using rule 55 (expression -> expression ADD expression .)
    SMALLEREQ       reduce using rule 55 (expression -> expression ADD expression .)
    LARGEREQ        reduce using rule 55 (expression -> expression ADD expression .)
    NOTEQ           reduce using rule 55 (expression -> expression ADD expression .)
    EQ              reduce using rule 55 (expression -> expression ADD expression .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73

  ! MUL             [ reduce using rule 55 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression ADD expression .) ]
  ! DOTMUL          [ reduce using rule 55 (expression -> expression ADD expression .) ]
  ! DOTDIV          [ reduce using rule 55 (expression -> expression ADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 55 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]


state 87

    (56) expression -> expression SUB expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 56 (expression -> expression SUB expression .)
    SUB             reduce using rule 56 (expression -> expression SUB expression .)
    DOTADD          reduce using rule 56 (expression -> expression SUB expression .)
    DOTSUB          reduce using rule 56 (expression -> expression SUB expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression SUB expression .)
    RPARENT         reduce using rule 56 (expression -> expression SUB expression .)
    SMALLER         reduce using rule 56 (expression -> expression SUB expression .)
    LARGER          reduce using rule 56 (expression -> expression SUB expression .)
    SMALLEREQ       reduce using rule 56 (expression -> expression SUB expression .)
    LARGEREQ        reduce using rule 56 (expression -> expression SUB expression .)
    NOTEQ           reduce using rule 56 (expression -> expression SUB expression .)
    EQ              reduce using rule 56 (expression -> expression SUB expression .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73

  ! MUL             [ reduce using rule 56 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression SUB expression .) ]
  ! DOTMUL          [ reduce using rule 56 (expression -> expression SUB expression .) ]
  ! DOTDIV          [ reduce using rule 56 (expression -> expression SUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 56 (expression -> expression SUB expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]


state 88

    (57) expression -> expression MUL expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 57 (expression -> expression MUL expression .)
    SUB             reduce using rule 57 (expression -> expression MUL expression .)
    MUL             reduce using rule 57 (expression -> expression MUL expression .)
    DIV             reduce using rule 57 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 57 (expression -> expression MUL expression .)
    DOTSUB          reduce using rule 57 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 57 (expression -> expression MUL expression .)
    DOTDIV          reduce using rule 57 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression MUL expression .)
    RPARENT         reduce using rule 57 (expression -> expression MUL expression .)
    SMALLER         reduce using rule 57 (expression -> expression MUL expression .)
    LARGER          reduce using rule 57 (expression -> expression MUL expression .)
    SMALLEREQ       reduce using rule 57 (expression -> expression MUL expression .)
    LARGEREQ        reduce using rule 57 (expression -> expression MUL expression .)
    NOTEQ           reduce using rule 57 (expression -> expression MUL expression .)
    EQ              reduce using rule 57 (expression -> expression MUL expression .)
    TRANSPOSE       shift and go to state 73

  ! TRANSPOSE       [ reduce using rule 57 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! DIV             [ shift and go to state 68 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]
  ! DOTMUL          [ shift and go to state 71 ]
  ! DOTDIV          [ shift and go to state 72 ]


state 89

    (58) expression -> expression DIV expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 58 (expression -> expression DIV expression .)
    SUB             reduce using rule 58 (expression -> expression DIV expression .)
    MUL             reduce using rule 58 (expression -> expression DIV expression .)
    DIV             reduce using rule 58 (expression -> expression DIV expression .)
    DOTADD          reduce using rule 58 (expression -> expression DIV expression .)
    DOTSUB          reduce using rule 58 (expression -> expression DIV expression .)
    DOTMUL          reduce using rule 58 (expression -> expression DIV expression .)
    DOTDIV          reduce using rule 58 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression DIV expression .)
    RPARENT         reduce using rule 58 (expression -> expression DIV expression .)
    SMALLER         reduce using rule 58 (expression -> expression DIV expression .)
    LARGER          reduce using rule 58 (expression -> expression DIV expression .)
    SMALLEREQ       reduce using rule 58 (expression -> expression DIV expression .)
    LARGEREQ        reduce using rule 58 (expression -> expression DIV expression .)
    NOTEQ           reduce using rule 58 (expression -> expression DIV expression .)
    EQ              reduce using rule 58 (expression -> expression DIV expression .)
    TRANSPOSE       shift and go to state 73

  ! TRANSPOSE       [ reduce using rule 58 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! DIV             [ shift and go to state 68 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]
  ! DOTMUL          [ shift and go to state 71 ]
  ! DOTDIV          [ shift and go to state 72 ]


state 90

    (59) expression -> expression DOTADD expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 59 (expression -> expression DOTADD expression .)
    SUB             reduce using rule 59 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 59 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 59 (expression -> expression DOTADD expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression DOTADD expression .)
    RPARENT         reduce using rule 59 (expression -> expression DOTADD expression .)
    SMALLER         reduce using rule 59 (expression -> expression DOTADD expression .)
    LARGER          reduce using rule 59 (expression -> expression DOTADD expression .)
    SMALLEREQ       reduce using rule 59 (expression -> expression DOTADD expression .)
    LARGEREQ        reduce using rule 59 (expression -> expression DOTADD expression .)
    NOTEQ           reduce using rule 59 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 59 (expression -> expression DOTADD expression .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73

  ! MUL             [ reduce using rule 59 (expression -> expression DOTADD expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 59 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 59 (expression -> expression DOTADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 59 (expression -> expression DOTADD expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]


state 91

    (60) expression -> expression DOTSUB expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 60 (expression -> expression DOTSUB expression .)
    SUB             reduce using rule 60 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 60 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 60 (expression -> expression DOTSUB expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression DOTSUB expression .)
    RPARENT         reduce using rule 60 (expression -> expression DOTSUB expression .)
    SMALLER         reduce using rule 60 (expression -> expression DOTSUB expression .)
    LARGER          reduce using rule 60 (expression -> expression DOTSUB expression .)
    SMALLEREQ       reduce using rule 60 (expression -> expression DOTSUB expression .)
    LARGEREQ        reduce using rule 60 (expression -> expression DOTSUB expression .)
    NOTEQ           reduce using rule 60 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 60 (expression -> expression DOTSUB expression .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73

  ! MUL             [ reduce using rule 60 (expression -> expression DOTSUB expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 60 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 60 (expression -> expression DOTSUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 60 (expression -> expression DOTSUB expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]


state 92

    (61) expression -> expression DOTMUL expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 61 (expression -> expression DOTMUL expression .)
    SUB             reduce using rule 61 (expression -> expression DOTMUL expression .)
    MUL             reduce using rule 61 (expression -> expression DOTMUL expression .)
    DIV             reduce using rule 61 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 61 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 61 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 61 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 61 (expression -> expression DOTMUL expression .)
    SEMICOLON       reduce using rule 61 (expression -> expression DOTMUL expression .)
    RPARENT         reduce using rule 61 (expression -> expression DOTMUL expression .)
    SMALLER         reduce using rule 61 (expression -> expression DOTMUL expression .)
    LARGER          reduce using rule 61 (expression -> expression DOTMUL expression .)
    SMALLEREQ       reduce using rule 61 (expression -> expression DOTMUL expression .)
    LARGEREQ        reduce using rule 61 (expression -> expression DOTMUL expression .)
    NOTEQ           reduce using rule 61 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 61 (expression -> expression DOTMUL expression .)
    TRANSPOSE       shift and go to state 73

  ! TRANSPOSE       [ reduce using rule 61 (expression -> expression DOTMUL expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! DIV             [ shift and go to state 68 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]
  ! DOTMUL          [ shift and go to state 71 ]
  ! DOTDIV          [ shift and go to state 72 ]


state 93

    (62) expression -> expression DOTDIV expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    ADD             reduce using rule 62 (expression -> expression DOTDIV expression .)
    SUB             reduce using rule 62 (expression -> expression DOTDIV expression .)
    MUL             reduce using rule 62 (expression -> expression DOTDIV expression .)
    DIV             reduce using rule 62 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 62 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 62 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 62 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 62 (expression -> expression DOTDIV expression .)
    SEMICOLON       reduce using rule 62 (expression -> expression DOTDIV expression .)
    RPARENT         reduce using rule 62 (expression -> expression DOTDIV expression .)
    SMALLER         reduce using rule 62 (expression -> expression DOTDIV expression .)
    LARGER          reduce using rule 62 (expression -> expression DOTDIV expression .)
    SMALLEREQ       reduce using rule 62 (expression -> expression DOTDIV expression .)
    LARGEREQ        reduce using rule 62 (expression -> expression DOTDIV expression .)
    NOTEQ           reduce using rule 62 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 62 (expression -> expression DOTDIV expression .)
    TRANSPOSE       shift and go to state 73

  ! TRANSPOSE       [ reduce using rule 62 (expression -> expression DOTDIV expression .) ]
  ! ADD             [ shift and go to state 65 ]
  ! SUB             [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! DIV             [ shift and go to state 68 ]
  ! DOTADD          [ shift and go to state 69 ]
  ! DOTSUB          [ shift and go to state 70 ]
  ! DOTMUL          [ shift and go to state 71 ]
  ! DOTDIV          [ shift and go to state 72 ]


state 94

    (54) expression -> LPARENT expression RPARENT .

    ADD             reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    SUB             reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    MUL             reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    DIV             reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    DOTADD          reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    DOTSUB          reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    DOTMUL          reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    DOTDIV          reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    TRANSPOSE       reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    SEMICOLON       reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    RPARENT         reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    SMALLER         reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    LARGER          reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    SMALLEREQ       reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    LARGEREQ        reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    NOTEQ           reduce using rule 54 (expression -> LPARENT expression RPARENT .)
    EQ              reduce using rule 54 (expression -> LPARENT expression RPARENT .)


state 95

    (20) print_inputs -> print_inputs COMMA print_input .

    COMMA           reduce using rule 20 (print_inputs -> print_inputs COMMA print_input .)
    SEMICOLON       reduce using rule 20 (print_inputs -> print_inputs COMMA print_input .)


state 96

    (33) branch -> IF LPARENT comparison RPARENT . instruction
    (34) branch -> IF LPARENT comparison RPARENT . instruction ELSE instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instruction                    shift and go to state 111
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 97

    (65) comparison -> expression comparison_operator . expression
    (53) expression -> . term
    (54) expression -> . LPARENT expression RPARENT
    (55) expression -> . expression ADD expression
    (56) expression -> . expression SUB expression
    (57) expression -> . expression MUL expression
    (58) expression -> . expression DIV expression
    (59) expression -> . expression DOTADD expression
    (60) expression -> . expression DOTSUB expression
    (61) expression -> . expression DOTMUL expression
    (62) expression -> . expression DOTDIV expression
    (63) expression -> . SUB expression
    (64) expression -> . expression TRANSPOSE
    (36) term -> . ID
    (37) term -> . number
    (38) term -> . matrix
    (39) term -> . string
    (45) number -> . INT
    (46) number -> . FLOAT
    (48) matrix -> . LSQBRACK matrix_contents RSQBRACK
    (49) matrix -> . matrix_fun
    (47) string -> . STRING
    (24) matrix_fun -> . fun_name LPARENT expression RPARENT
    (25) fun_name -> . EYE
    (26) fun_name -> . ZEROS
    (27) fun_name -> . ONES

    LPARENT         shift and go to state 38
    SUB             shift and go to state 39
    ID              shift and go to state 40
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    LSQBRACK        shift and go to state 30
    STRING          shift and go to state 46
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35

    expression                     shift and go to state 112
    term                           shift and go to state 37
    number                         shift and go to state 41
    matrix                         shift and go to state 42
    string                         shift and go to state 43
    matrix_fun                     shift and go to state 31
    fun_name                       shift and go to state 32

state 98

    (66) comparison_operator -> SMALLER .

    LPARENT         reduce using rule 66 (comparison_operator -> SMALLER .)
    SUB             reduce using rule 66 (comparison_operator -> SMALLER .)
    ID              reduce using rule 66 (comparison_operator -> SMALLER .)
    INT             reduce using rule 66 (comparison_operator -> SMALLER .)
    FLOAT           reduce using rule 66 (comparison_operator -> SMALLER .)
    LSQBRACK        reduce using rule 66 (comparison_operator -> SMALLER .)
    STRING          reduce using rule 66 (comparison_operator -> SMALLER .)
    EYE             reduce using rule 66 (comparison_operator -> SMALLER .)
    ZEROS           reduce using rule 66 (comparison_operator -> SMALLER .)
    ONES            reduce using rule 66 (comparison_operator -> SMALLER .)


state 99

    (67) comparison_operator -> LARGER .

    LPARENT         reduce using rule 67 (comparison_operator -> LARGER .)
    SUB             reduce using rule 67 (comparison_operator -> LARGER .)
    ID              reduce using rule 67 (comparison_operator -> LARGER .)
    INT             reduce using rule 67 (comparison_operator -> LARGER .)
    FLOAT           reduce using rule 67 (comparison_operator -> LARGER .)
    LSQBRACK        reduce using rule 67 (comparison_operator -> LARGER .)
    STRING          reduce using rule 67 (comparison_operator -> LARGER .)
    EYE             reduce using rule 67 (comparison_operator -> LARGER .)
    ZEROS           reduce using rule 67 (comparison_operator -> LARGER .)
    ONES            reduce using rule 67 (comparison_operator -> LARGER .)


state 100

    (68) comparison_operator -> SMALLEREQ .

    LPARENT         reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    SUB             reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    ID              reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    INT             reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    FLOAT           reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    LSQBRACK        reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    STRING          reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    EYE             reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    ZEROS           reduce using rule 68 (comparison_operator -> SMALLEREQ .)
    ONES            reduce using rule 68 (comparison_operator -> SMALLEREQ .)


state 101

    (69) comparison_operator -> LARGEREQ .

    LPARENT         reduce using rule 69 (comparison_operator -> LARGEREQ .)
    SUB             reduce using rule 69 (comparison_operator -> LARGEREQ .)
    ID              reduce using rule 69 (comparison_operator -> LARGEREQ .)
    INT             reduce using rule 69 (comparison_operator -> LARGEREQ .)
    FLOAT           reduce using rule 69 (comparison_operator -> LARGEREQ .)
    LSQBRACK        reduce using rule 69 (comparison_operator -> LARGEREQ .)
    STRING          reduce using rule 69 (comparison_operator -> LARGEREQ .)
    EYE             reduce using rule 69 (comparison_operator -> LARGEREQ .)
    ZEROS           reduce using rule 69 (comparison_operator -> LARGEREQ .)
    ONES            reduce using rule 69 (comparison_operator -> LARGEREQ .)


state 102

    (70) comparison_operator -> NOTEQ .

    LPARENT         reduce using rule 70 (comparison_operator -> NOTEQ .)
    SUB             reduce using rule 70 (comparison_operator -> NOTEQ .)
    ID              reduce using rule 70 (comparison_operator -> NOTEQ .)
    INT             reduce using rule 70 (comparison_operator -> NOTEQ .)
    FLOAT           reduce using rule 70 (comparison_operator -> NOTEQ .)
    LSQBRACK        reduce using rule 70 (comparison_operator -> NOTEQ .)
    STRING          reduce using rule 70 (comparison_operator -> NOTEQ .)
    EYE             reduce using rule 70 (comparison_operator -> NOTEQ .)
    ZEROS           reduce using rule 70 (comparison_operator -> NOTEQ .)
    ONES            reduce using rule 70 (comparison_operator -> NOTEQ .)


state 103

    (71) comparison_operator -> EQ .

    LPARENT         reduce using rule 71 (comparison_operator -> EQ .)
    SUB             reduce using rule 71 (comparison_operator -> EQ .)
    ID              reduce using rule 71 (comparison_operator -> EQ .)
    INT             reduce using rule 71 (comparison_operator -> EQ .)
    FLOAT           reduce using rule 71 (comparison_operator -> EQ .)
    LSQBRACK        reduce using rule 71 (comparison_operator -> EQ .)
    STRING          reduce using rule 71 (comparison_operator -> EQ .)
    EYE             reduce using rule 71 (comparison_operator -> EQ .)
    ZEROS           reduce using rule 71 (comparison_operator -> EQ .)
    ONES            reduce using rule 71 (comparison_operator -> EQ .)


state 104

    (40) num_term -> ID .

    COLON           reduce using rule 40 (num_term -> ID .)
    LCURLBRACK      reduce using rule 40 (num_term -> ID .)
    ID              reduce using rule 40 (num_term -> ID .)
    BREAK           reduce using rule 40 (num_term -> ID .)
    CONTINUE        reduce using rule 40 (num_term -> ID .)
    RETURN          reduce using rule 40 (num_term -> ID .)
    PRINT           reduce using rule 40 (num_term -> ID .)
    IF              reduce using rule 40 (num_term -> ID .)
    FOR             reduce using rule 40 (num_term -> ID .)
    WHILE           reduce using rule 40 (num_term -> ID .)


state 105

    (31) for_expression -> ID ASSIGN range .

    LCURLBRACK      reduce using rule 31 (for_expression -> ID ASSIGN range .)
    ID              reduce using rule 31 (for_expression -> ID ASSIGN range .)
    BREAK           reduce using rule 31 (for_expression -> ID ASSIGN range .)
    CONTINUE        reduce using rule 31 (for_expression -> ID ASSIGN range .)
    RETURN          reduce using rule 31 (for_expression -> ID ASSIGN range .)
    PRINT           reduce using rule 31 (for_expression -> ID ASSIGN range .)
    IF              reduce using rule 31 (for_expression -> ID ASSIGN range .)
    FOR             reduce using rule 31 (for_expression -> ID ASSIGN range .)
    WHILE           reduce using rule 31 (for_expression -> ID ASSIGN range .)


state 106

    (35) range -> num_term . COLON num_term

    COLON           shift and go to state 113


state 107

    (41) num_term -> number .

    COLON           reduce using rule 41 (num_term -> number .)
    LCURLBRACK      reduce using rule 41 (num_term -> number .)
    ID              reduce using rule 41 (num_term -> number .)
    BREAK           reduce using rule 41 (num_term -> number .)
    CONTINUE        reduce using rule 41 (num_term -> number .)
    RETURN          reduce using rule 41 (num_term -> number .)
    PRINT           reduce using rule 41 (num_term -> number .)
    IF              reduce using rule 41 (num_term -> number .)
    FOR             reduce using rule 41 (num_term -> number .)
    WHILE           reduce using rule 41 (num_term -> number .)


state 108

    (32) while -> WHILE LPARENT comparison RPARENT . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instruction                    shift and go to state 114
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 109

    (50) matrix_contents -> matrix_contents COMMA matrix_content .

    RSQBRACK        reduce using rule 50 (matrix_contents -> matrix_contents COMMA matrix_content .)
    COMMA           reduce using rule 50 (matrix_contents -> matrix_contents COMMA matrix_content .)


state 110

    (24) matrix_fun -> fun_name LPARENT expression RPARENT .

    ASSIGN          reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    ADDASSIGN       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SUBASSIGN       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    MULASSIGN       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DIVASSIGN       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    ADD             reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SUB             reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    MUL             reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DIV             reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTADD          reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTSUB          reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTMUL          reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTDIV          reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    TRANSPOSE       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SEMICOLON       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    RSQBRACK        reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    COMMA           reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    RPARENT         reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SMALLER         reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    LARGER          reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SMALLEREQ       reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    LARGEREQ        reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    NOTEQ           reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    EQ              reduce using rule 24 (matrix_fun -> fun_name LPARENT expression RPARENT .)


state 111

    (33) branch -> IF LPARENT comparison RPARENT instruction .
    (34) branch -> IF LPARENT comparison RPARENT instruction . ELSE instruction

    LCURLBRACK      reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    ID              reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    BREAK           reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    CONTINUE        reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    RETURN          reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    PRINT           reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    IF              reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    FOR             reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    WHILE           reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    $end            reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    RCURLBRACK      reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .)
    ELSE            shift and go to state 115

  ! ELSE            [ reduce using rule 33 (branch -> IF LPARENT comparison RPARENT instruction .) ]


state 112

    (65) comparison -> expression comparison_operator expression .
    (55) expression -> expression . ADD expression
    (56) expression -> expression . SUB expression
    (57) expression -> expression . MUL expression
    (58) expression -> expression . DIV expression
    (59) expression -> expression . DOTADD expression
    (60) expression -> expression . DOTSUB expression
    (61) expression -> expression . DOTMUL expression
    (62) expression -> expression . DOTDIV expression
    (64) expression -> expression . TRANSPOSE

    RPARENT         reduce using rule 65 (comparison -> expression comparison_operator expression .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    DOTADD          shift and go to state 69
    DOTSUB          shift and go to state 70
    DOTMUL          shift and go to state 71
    DOTDIV          shift and go to state 72
    TRANSPOSE       shift and go to state 73


state 113

    (35) range -> num_term COLON . num_term
    (40) num_term -> . ID
    (41) num_term -> . number
    (45) number -> . INT
    (46) number -> . FLOAT

    ID              shift and go to state 104
    INT             shift and go to state 44
    FLOAT           shift and go to state 45

    num_term                       shift and go to state 116
    number                         shift and go to state 107

state 114

    (32) while -> WHILE LPARENT comparison RPARENT instruction .

    LCURLBRACK      reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    ID              reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    BREAK           reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    CONTINUE        reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    RETURN          reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    PRINT           reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    IF              reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    FOR             reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    WHILE           reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    $end            reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    RCURLBRACK      reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)
    ELSE            reduce using rule 32 (while -> WHILE LPARENT comparison RPARENT instruction .)


state 115

    (34) branch -> IF LPARENT comparison RPARENT instruction ELSE . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ID matrix assignment_operator expression
    (16) call -> . BREAK
    (17) call -> . CONTINUE
    (18) call -> . RETURN expression
    (19) call -> . PRINT print_inputs
    (28) loop -> . for
    (29) loop -> . while
    (33) branch -> . IF LPARENT comparison RPARENT instruction
    (34) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (30) for -> . FOR for_expression instruction
    (32) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18

    instruction                    shift and go to state 117
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    for                            shift and go to state 14
    while                          shift and go to state 15

state 116

    (35) range -> num_term COLON num_term .

    LCURLBRACK      reduce using rule 35 (range -> num_term COLON num_term .)
    ID              reduce using rule 35 (range -> num_term COLON num_term .)
    BREAK           reduce using rule 35 (range -> num_term COLON num_term .)
    CONTINUE        reduce using rule 35 (range -> num_term COLON num_term .)
    RETURN          reduce using rule 35 (range -> num_term COLON num_term .)
    PRINT           reduce using rule 35 (range -> num_term COLON num_term .)
    IF              reduce using rule 35 (range -> num_term COLON num_term .)
    FOR             reduce using rule 35 (range -> num_term COLON num_term .)
    WHILE           reduce using rule 35 (range -> num_term COLON num_term .)


state 117

    (34) branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .

    LCURLBRACK      reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    ID              reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    BREAK           reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    CONTINUE        reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    RETURN          reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    PRINT           reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    IF              reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    FOR             reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    WHILE           reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    $end            reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    RCURLBRACK      reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    ELSE            reduce using rule 34 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)

