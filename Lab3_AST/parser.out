Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> assignment SEMICOLON
Rule 5     instruction -> call SEMICOLON
Rule 6     instruction -> loop
Rule 7     instruction -> branch
Rule 8     instruction -> LCURLBRACK instructions RCURLBRACK
Rule 9     assignment -> ID assignment_operator expression
Rule 10    assignment -> ref assignment_operator expression
Rule 11    ref -> ID LSQBRACK num_term RSQBRACK
Rule 12    ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK
Rule 13    assignment_operator -> ASSIGN
Rule 14    assignment_operator -> ADDASSIGN
Rule 15    assignment_operator -> SUBASSIGN
Rule 16    assignment_operator -> MULASSIGN
Rule 17    assignment_operator -> DIVASSIGN
Rule 18    expression -> term
Rule 19    expression -> LPARENT expression RPARENT
Rule 20    expression -> expression ADD expression
Rule 21    expression -> expression SUB expression
Rule 22    expression -> expression MUL expression
Rule 23    expression -> expression DIV expression
Rule 24    expression -> expression DOTADD expression
Rule 25    expression -> expression DOTSUB expression
Rule 26    expression -> expression DOTMUL expression
Rule 27    expression -> expression DOTDIV expression
Rule 28    expression -> SUB expression
Rule 29    expression -> expression TRANSPOSE
Rule 30    comparison -> expression comparison_operator expression
Rule 31    comparison_operator -> SMALLER
Rule 32    comparison_operator -> LARGER
Rule 33    comparison_operator -> SMALLEREQ
Rule 34    comparison_operator -> LARGEREQ
Rule 35    comparison_operator -> NOTEQ
Rule 36    comparison_operator -> EQ
Rule 37    call -> BREAK
Rule 38    call -> CONTINUE
Rule 39    call -> RETURN expression
Rule 40    call -> PRINT print_inputs
Rule 41    print_inputs -> print_inputs COMMA print_input
Rule 42    print_inputs -> print_input
Rule 43    print_input -> STRING
Rule 44    print_input -> ID
Rule 45    matrix_fun -> fun_name LPARENT expression RPARENT
Rule 46    fun_name -> EYE
Rule 47    fun_name -> ZEROS
Rule 48    fun_name -> ONES
Rule 49    loop -> for
Rule 50    loop -> while
Rule 51    for -> FOR for_expression instruction
Rule 52    for_expression -> ID ASSIGN range
Rule 53    while -> WHILE LPARENT comparison RPARENT instruction
Rule 54    branch -> IF LPARENT comparison RPARENT instruction
Rule 55    branch -> IF LPARENT comparison RPARENT instruction ELSE instruction
Rule 56    range -> num_term COLON num_term
Rule 57    term -> ID
Rule 58    term -> number
Rule 59    term -> matrix
Rule 60    term -> string
Rule 61    num_term -> ID
Rule 62    num_term -> number
Rule 63    number -> INT
Rule 64    number -> FLOAT
Rule 65    string -> STRING
Rule 66    matrix -> LSQBRACK vectors RSQBRACK
Rule 67    matrix -> vector
Rule 68    matrix -> matrix_fun
Rule 69    vectors -> vectors COMMA vector
Rule 70    vectors -> vector
Rule 71    vector -> LSQBRACK numbers RSQBRACK
Rule 72    numbers -> numbers COMMA number
Rule 73    numbers -> num_term

Terminals, with rules where they appear

ADD                  : 20
ADDASSIGN            : 14
ASSIGN               : 13 52
BREAK                : 37
COLON                : 56
COMMA                : 12 41 69 72
CONTINUE             : 38
DIV                  : 23
DIVASSIGN            : 17
DOTADD               : 24
DOTDIV               : 27
DOTMUL               : 26
DOTSUB               : 25
ELSE                 : 55
EQ                   : 36
EYE                  : 46
FLOAT                : 64
FOR                  : 51
ID                   : 9 11 12 44 52 57 61
IF                   : 54 55
INT                  : 63
LARGER               : 32
LARGEREQ             : 34
LCURLBRACK           : 8
LPARENT              : 19 45 53 54 55
LSQBRACK             : 11 12 66 71
MUL                  : 22
MULASSIGN            : 16
NOTEQ                : 35
ONES                 : 48
PRINT                : 40
RCURLBRACK           : 8
RETURN               : 39
RPARENT              : 19 45 53 54 55
RSQBRACK             : 11 12 66 71
SEMICOLON            : 4 5
SMALLER              : 31
SMALLEREQ            : 33
STRING               : 43 65
SUB                  : 21 28
SUBASSIGN            : 15
TRANSPOSE            : 29
WHILE                : 53
ZEROS                : 47
error                : 

Nonterminals, with rules where they appear

assignment           : 4
assignment_operator  : 9 10
branch               : 7
call                 : 5
comparison           : 53 54 55
comparison_operator  : 30
expression           : 9 10 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 29 30 30 39 45
for                  : 49
for_expression       : 51
fun_name             : 45
instruction          : 2 3 51 53 54 55 55
instructions         : 1 2 8
loop                 : 6
matrix               : 59
matrix_fun           : 68
num_term             : 11 12 12 56 56 73
number               : 58 62 72
numbers              : 71 72
print_input          : 41 42
print_inputs         : 40 41
program              : 0
range                : 52
ref                  : 10
string               : 60
term                 : 18
vector               : 67 69 70
vectors              : 66 69
while                : 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    $end            reduce using rule 1 (program -> instructions .)
    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instruction                    shift and go to state 20
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 3

    (3) instructions -> instruction .

    LCURLBRACK      reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    FOR             reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    RCURLBRACK      reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 21


state 5

    (5) instruction -> call . SEMICOLON

    SEMICOLON       shift and go to state 22


state 6

    (6) instruction -> loop .

    LCURLBRACK      reduce using rule 6 (instruction -> loop .)
    ID              reduce using rule 6 (instruction -> loop .)
    BREAK           reduce using rule 6 (instruction -> loop .)
    CONTINUE        reduce using rule 6 (instruction -> loop .)
    RETURN          reduce using rule 6 (instruction -> loop .)
    PRINT           reduce using rule 6 (instruction -> loop .)
    IF              reduce using rule 6 (instruction -> loop .)
    FOR             reduce using rule 6 (instruction -> loop .)
    WHILE           reduce using rule 6 (instruction -> loop .)
    $end            reduce using rule 6 (instruction -> loop .)
    RCURLBRACK      reduce using rule 6 (instruction -> loop .)
    ELSE            reduce using rule 6 (instruction -> loop .)


state 7

    (7) instruction -> branch .

    LCURLBRACK      reduce using rule 7 (instruction -> branch .)
    ID              reduce using rule 7 (instruction -> branch .)
    BREAK           reduce using rule 7 (instruction -> branch .)
    CONTINUE        reduce using rule 7 (instruction -> branch .)
    RETURN          reduce using rule 7 (instruction -> branch .)
    PRINT           reduce using rule 7 (instruction -> branch .)
    IF              reduce using rule 7 (instruction -> branch .)
    FOR             reduce using rule 7 (instruction -> branch .)
    WHILE           reduce using rule 7 (instruction -> branch .)
    $end            reduce using rule 7 (instruction -> branch .)
    RCURLBRACK      reduce using rule 7 (instruction -> branch .)
    ELSE            reduce using rule 7 (instruction -> branch .)


state 8

    (8) instruction -> LCURLBRACK . instructions RCURLBRACK
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instructions                   shift and go to state 23
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 9

    (9) assignment -> ID . assignment_operator expression
    (11) ref -> ID . LSQBRACK num_term RSQBRACK
    (12) ref -> ID . LSQBRACK num_term COMMA num_term RSQBRACK
    (13) assignment_operator -> . ASSIGN
    (14) assignment_operator -> . ADDASSIGN
    (15) assignment_operator -> . SUBASSIGN
    (16) assignment_operator -> . MULASSIGN
    (17) assignment_operator -> . DIVASSIGN

    LSQBRACK        shift and go to state 25
    ASSIGN          shift and go to state 26
    ADDASSIGN       shift and go to state 27
    SUBASSIGN       shift and go to state 28
    MULASSIGN       shift and go to state 29
    DIVASSIGN       shift and go to state 30

    assignment_operator            shift and go to state 24

state 10

    (10) assignment -> ref . assignment_operator expression
    (13) assignment_operator -> . ASSIGN
    (14) assignment_operator -> . ADDASSIGN
    (15) assignment_operator -> . SUBASSIGN
    (16) assignment_operator -> . MULASSIGN
    (17) assignment_operator -> . DIVASSIGN

    ASSIGN          shift and go to state 26
    ADDASSIGN       shift and go to state 27
    SUBASSIGN       shift and go to state 28
    MULASSIGN       shift and go to state 29
    DIVASSIGN       shift and go to state 30

    assignment_operator            shift and go to state 31

state 11

    (37) call -> BREAK .

    SEMICOLON       reduce using rule 37 (call -> BREAK .)


state 12

    (38) call -> CONTINUE .

    SEMICOLON       reduce using rule 38 (call -> CONTINUE .)


state 13

    (39) call -> RETURN . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 32
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 14

    (40) call -> PRINT . print_inputs
    (41) print_inputs -> . print_inputs COMMA print_input
    (42) print_inputs -> . print_input
    (43) print_input -> . STRING
    (44) print_input -> . ID

    STRING          shift and go to state 52
    ID              shift and go to state 53

    print_inputs                   shift and go to state 50
    print_input                    shift and go to state 51

state 15

    (49) loop -> for .

    LCURLBRACK      reduce using rule 49 (loop -> for .)
    ID              reduce using rule 49 (loop -> for .)
    BREAK           reduce using rule 49 (loop -> for .)
    CONTINUE        reduce using rule 49 (loop -> for .)
    RETURN          reduce using rule 49 (loop -> for .)
    PRINT           reduce using rule 49 (loop -> for .)
    IF              reduce using rule 49 (loop -> for .)
    FOR             reduce using rule 49 (loop -> for .)
    WHILE           reduce using rule 49 (loop -> for .)
    $end            reduce using rule 49 (loop -> for .)
    RCURLBRACK      reduce using rule 49 (loop -> for .)
    ELSE            reduce using rule 49 (loop -> for .)


state 16

    (50) loop -> while .

    LCURLBRACK      reduce using rule 50 (loop -> while .)
    ID              reduce using rule 50 (loop -> while .)
    BREAK           reduce using rule 50 (loop -> while .)
    CONTINUE        reduce using rule 50 (loop -> while .)
    RETURN          reduce using rule 50 (loop -> while .)
    PRINT           reduce using rule 50 (loop -> while .)
    IF              reduce using rule 50 (loop -> while .)
    FOR             reduce using rule 50 (loop -> while .)
    WHILE           reduce using rule 50 (loop -> while .)
    $end            reduce using rule 50 (loop -> while .)
    RCURLBRACK      reduce using rule 50 (loop -> while .)
    ELSE            reduce using rule 50 (loop -> while .)


state 17

    (54) branch -> IF . LPARENT comparison RPARENT instruction
    (55) branch -> IF . LPARENT comparison RPARENT instruction ELSE instruction

    LPARENT         shift and go to state 54


state 18

    (51) for -> FOR . for_expression instruction
    (52) for_expression -> . ID ASSIGN range

    ID              shift and go to state 56

    for_expression                 shift and go to state 55

state 19

    (53) while -> WHILE . LPARENT comparison RPARENT instruction

    LPARENT         shift and go to state 57


state 20

    (2) instructions -> instructions instruction .

    LCURLBRACK      reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    RCURLBRACK      reduce using rule 2 (instructions -> instructions instruction .)


state 21

    (4) instruction -> assignment SEMICOLON .

    LCURLBRACK      reduce using rule 4 (instruction -> assignment SEMICOLON .)
    ID              reduce using rule 4 (instruction -> assignment SEMICOLON .)
    BREAK           reduce using rule 4 (instruction -> assignment SEMICOLON .)
    CONTINUE        reduce using rule 4 (instruction -> assignment SEMICOLON .)
    RETURN          reduce using rule 4 (instruction -> assignment SEMICOLON .)
    PRINT           reduce using rule 4 (instruction -> assignment SEMICOLON .)
    IF              reduce using rule 4 (instruction -> assignment SEMICOLON .)
    FOR             reduce using rule 4 (instruction -> assignment SEMICOLON .)
    WHILE           reduce using rule 4 (instruction -> assignment SEMICOLON .)
    $end            reduce using rule 4 (instruction -> assignment SEMICOLON .)
    RCURLBRACK      reduce using rule 4 (instruction -> assignment SEMICOLON .)
    ELSE            reduce using rule 4 (instruction -> assignment SEMICOLON .)


state 22

    (5) instruction -> call SEMICOLON .

    LCURLBRACK      reduce using rule 5 (instruction -> call SEMICOLON .)
    ID              reduce using rule 5 (instruction -> call SEMICOLON .)
    BREAK           reduce using rule 5 (instruction -> call SEMICOLON .)
    CONTINUE        reduce using rule 5 (instruction -> call SEMICOLON .)
    RETURN          reduce using rule 5 (instruction -> call SEMICOLON .)
    PRINT           reduce using rule 5 (instruction -> call SEMICOLON .)
    IF              reduce using rule 5 (instruction -> call SEMICOLON .)
    FOR             reduce using rule 5 (instruction -> call SEMICOLON .)
    WHILE           reduce using rule 5 (instruction -> call SEMICOLON .)
    $end            reduce using rule 5 (instruction -> call SEMICOLON .)
    RCURLBRACK      reduce using rule 5 (instruction -> call SEMICOLON .)
    ELSE            reduce using rule 5 (instruction -> call SEMICOLON .)


state 23

    (8) instruction -> LCURLBRACK instructions . RCURLBRACK
    (2) instructions -> instructions . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    RCURLBRACK      shift and go to state 58
    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instruction                    shift and go to state 20
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 24

    (9) assignment -> ID assignment_operator . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 59
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 25

    (11) ref -> ID LSQBRACK . num_term RSQBRACK
    (12) ref -> ID LSQBRACK . num_term COMMA num_term RSQBRACK
    (61) num_term -> . ID
    (62) num_term -> . number
    (63) number -> . INT
    (64) number -> . FLOAT

    ID              shift and go to state 60
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    num_term                       shift and go to state 61
    number                         shift and go to state 62

state 26

    (13) assignment_operator -> ASSIGN .

    LPARENT         reduce using rule 13 (assignment_operator -> ASSIGN .)
    SUB             reduce using rule 13 (assignment_operator -> ASSIGN .)
    ID              reduce using rule 13 (assignment_operator -> ASSIGN .)
    INT             reduce using rule 13 (assignment_operator -> ASSIGN .)
    FLOAT           reduce using rule 13 (assignment_operator -> ASSIGN .)
    LSQBRACK        reduce using rule 13 (assignment_operator -> ASSIGN .)
    STRING          reduce using rule 13 (assignment_operator -> ASSIGN .)
    EYE             reduce using rule 13 (assignment_operator -> ASSIGN .)
    ZEROS           reduce using rule 13 (assignment_operator -> ASSIGN .)
    ONES            reduce using rule 13 (assignment_operator -> ASSIGN .)


state 27

    (14) assignment_operator -> ADDASSIGN .

    LPARENT         reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    SUB             reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    ID              reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    INT             reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    FLOAT           reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    LSQBRACK        reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    STRING          reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    EYE             reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    ZEROS           reduce using rule 14 (assignment_operator -> ADDASSIGN .)
    ONES            reduce using rule 14 (assignment_operator -> ADDASSIGN .)


state 28

    (15) assignment_operator -> SUBASSIGN .

    LPARENT         reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    SUB             reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    ID              reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    INT             reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    FLOAT           reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    LSQBRACK        reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    STRING          reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    EYE             reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    ZEROS           reduce using rule 15 (assignment_operator -> SUBASSIGN .)
    ONES            reduce using rule 15 (assignment_operator -> SUBASSIGN .)


state 29

    (16) assignment_operator -> MULASSIGN .

    LPARENT         reduce using rule 16 (assignment_operator -> MULASSIGN .)
    SUB             reduce using rule 16 (assignment_operator -> MULASSIGN .)
    ID              reduce using rule 16 (assignment_operator -> MULASSIGN .)
    INT             reduce using rule 16 (assignment_operator -> MULASSIGN .)
    FLOAT           reduce using rule 16 (assignment_operator -> MULASSIGN .)
    LSQBRACK        reduce using rule 16 (assignment_operator -> MULASSIGN .)
    STRING          reduce using rule 16 (assignment_operator -> MULASSIGN .)
    EYE             reduce using rule 16 (assignment_operator -> MULASSIGN .)
    ZEROS           reduce using rule 16 (assignment_operator -> MULASSIGN .)
    ONES            reduce using rule 16 (assignment_operator -> MULASSIGN .)


state 30

    (17) assignment_operator -> DIVASSIGN .

    LPARENT         reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    SUB             reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    ID              reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    INT             reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    FLOAT           reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    LSQBRACK        reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    STRING          reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    EYE             reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    ZEROS           reduce using rule 17 (assignment_operator -> DIVASSIGN .)
    ONES            reduce using rule 17 (assignment_operator -> DIVASSIGN .)


state 31

    (10) assignment -> ref assignment_operator . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 63
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 32

    (39) call -> RETURN expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    SEMICOLON       reduce using rule 39 (call -> RETURN expression .)
    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72


state 33

    (18) expression -> term .

    ADD             reduce using rule 18 (expression -> term .)
    SUB             reduce using rule 18 (expression -> term .)
    MUL             reduce using rule 18 (expression -> term .)
    DIV             reduce using rule 18 (expression -> term .)
    DOTADD          reduce using rule 18 (expression -> term .)
    DOTSUB          reduce using rule 18 (expression -> term .)
    DOTMUL          reduce using rule 18 (expression -> term .)
    DOTDIV          reduce using rule 18 (expression -> term .)
    TRANSPOSE       reduce using rule 18 (expression -> term .)
    SEMICOLON       reduce using rule 18 (expression -> term .)
    RPARENT         reduce using rule 18 (expression -> term .)
    SMALLER         reduce using rule 18 (expression -> term .)
    LARGER          reduce using rule 18 (expression -> term .)
    SMALLEREQ       reduce using rule 18 (expression -> term .)
    LARGEREQ        reduce using rule 18 (expression -> term .)
    NOTEQ           reduce using rule 18 (expression -> term .)
    EQ              reduce using rule 18 (expression -> term .)


state 34

    (19) expression -> LPARENT . expression RPARENT
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 73
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 35

    (28) expression -> SUB . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 74
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 36

    (57) term -> ID .

    ADD             reduce using rule 57 (term -> ID .)
    SUB             reduce using rule 57 (term -> ID .)
    MUL             reduce using rule 57 (term -> ID .)
    DIV             reduce using rule 57 (term -> ID .)
    DOTADD          reduce using rule 57 (term -> ID .)
    DOTSUB          reduce using rule 57 (term -> ID .)
    DOTMUL          reduce using rule 57 (term -> ID .)
    DOTDIV          reduce using rule 57 (term -> ID .)
    TRANSPOSE       reduce using rule 57 (term -> ID .)
    SEMICOLON       reduce using rule 57 (term -> ID .)
    RPARENT         reduce using rule 57 (term -> ID .)
    SMALLER         reduce using rule 57 (term -> ID .)
    LARGER          reduce using rule 57 (term -> ID .)
    SMALLEREQ       reduce using rule 57 (term -> ID .)
    LARGEREQ        reduce using rule 57 (term -> ID .)
    NOTEQ           reduce using rule 57 (term -> ID .)
    EQ              reduce using rule 57 (term -> ID .)


state 37

    (58) term -> number .

    ADD             reduce using rule 58 (term -> number .)
    SUB             reduce using rule 58 (term -> number .)
    MUL             reduce using rule 58 (term -> number .)
    DIV             reduce using rule 58 (term -> number .)
    DOTADD          reduce using rule 58 (term -> number .)
    DOTSUB          reduce using rule 58 (term -> number .)
    DOTMUL          reduce using rule 58 (term -> number .)
    DOTDIV          reduce using rule 58 (term -> number .)
    TRANSPOSE       reduce using rule 58 (term -> number .)
    SEMICOLON       reduce using rule 58 (term -> number .)
    RPARENT         reduce using rule 58 (term -> number .)
    SMALLER         reduce using rule 58 (term -> number .)
    LARGER          reduce using rule 58 (term -> number .)
    SMALLEREQ       reduce using rule 58 (term -> number .)
    LARGEREQ        reduce using rule 58 (term -> number .)
    NOTEQ           reduce using rule 58 (term -> number .)
    EQ              reduce using rule 58 (term -> number .)


state 38

    (59) term -> matrix .

    ADD             reduce using rule 59 (term -> matrix .)
    SUB             reduce using rule 59 (term -> matrix .)
    MUL             reduce using rule 59 (term -> matrix .)
    DIV             reduce using rule 59 (term -> matrix .)
    DOTADD          reduce using rule 59 (term -> matrix .)
    DOTSUB          reduce using rule 59 (term -> matrix .)
    DOTMUL          reduce using rule 59 (term -> matrix .)
    DOTDIV          reduce using rule 59 (term -> matrix .)
    TRANSPOSE       reduce using rule 59 (term -> matrix .)
    SEMICOLON       reduce using rule 59 (term -> matrix .)
    RPARENT         reduce using rule 59 (term -> matrix .)
    SMALLER         reduce using rule 59 (term -> matrix .)
    LARGER          reduce using rule 59 (term -> matrix .)
    SMALLEREQ       reduce using rule 59 (term -> matrix .)
    LARGEREQ        reduce using rule 59 (term -> matrix .)
    NOTEQ           reduce using rule 59 (term -> matrix .)
    EQ              reduce using rule 59 (term -> matrix .)


state 39

    (60) term -> string .

    ADD             reduce using rule 60 (term -> string .)
    SUB             reduce using rule 60 (term -> string .)
    MUL             reduce using rule 60 (term -> string .)
    DIV             reduce using rule 60 (term -> string .)
    DOTADD          reduce using rule 60 (term -> string .)
    DOTSUB          reduce using rule 60 (term -> string .)
    DOTMUL          reduce using rule 60 (term -> string .)
    DOTDIV          reduce using rule 60 (term -> string .)
    TRANSPOSE       reduce using rule 60 (term -> string .)
    SEMICOLON       reduce using rule 60 (term -> string .)
    RPARENT         reduce using rule 60 (term -> string .)
    SMALLER         reduce using rule 60 (term -> string .)
    LARGER          reduce using rule 60 (term -> string .)
    SMALLEREQ       reduce using rule 60 (term -> string .)
    LARGEREQ        reduce using rule 60 (term -> string .)
    NOTEQ           reduce using rule 60 (term -> string .)
    EQ              reduce using rule 60 (term -> string .)


state 40

    (63) number -> INT .

    ADD             reduce using rule 63 (number -> INT .)
    SUB             reduce using rule 63 (number -> INT .)
    MUL             reduce using rule 63 (number -> INT .)
    DIV             reduce using rule 63 (number -> INT .)
    DOTADD          reduce using rule 63 (number -> INT .)
    DOTSUB          reduce using rule 63 (number -> INT .)
    DOTMUL          reduce using rule 63 (number -> INT .)
    DOTDIV          reduce using rule 63 (number -> INT .)
    TRANSPOSE       reduce using rule 63 (number -> INT .)
    SEMICOLON       reduce using rule 63 (number -> INT .)
    RSQBRACK        reduce using rule 63 (number -> INT .)
    COMMA           reduce using rule 63 (number -> INT .)
    RPARENT         reduce using rule 63 (number -> INT .)
    SMALLER         reduce using rule 63 (number -> INT .)
    LARGER          reduce using rule 63 (number -> INT .)
    SMALLEREQ       reduce using rule 63 (number -> INT .)
    LARGEREQ        reduce using rule 63 (number -> INT .)
    NOTEQ           reduce using rule 63 (number -> INT .)
    EQ              reduce using rule 63 (number -> INT .)
    COLON           reduce using rule 63 (number -> INT .)
    LCURLBRACK      reduce using rule 63 (number -> INT .)
    ID              reduce using rule 63 (number -> INT .)
    BREAK           reduce using rule 63 (number -> INT .)
    CONTINUE        reduce using rule 63 (number -> INT .)
    RETURN          reduce using rule 63 (number -> INT .)
    PRINT           reduce using rule 63 (number -> INT .)
    IF              reduce using rule 63 (number -> INT .)
    FOR             reduce using rule 63 (number -> INT .)
    WHILE           reduce using rule 63 (number -> INT .)


state 41

    (64) number -> FLOAT .

    ADD             reduce using rule 64 (number -> FLOAT .)
    SUB             reduce using rule 64 (number -> FLOAT .)
    MUL             reduce using rule 64 (number -> FLOAT .)
    DIV             reduce using rule 64 (number -> FLOAT .)
    DOTADD          reduce using rule 64 (number -> FLOAT .)
    DOTSUB          reduce using rule 64 (number -> FLOAT .)
    DOTMUL          reduce using rule 64 (number -> FLOAT .)
    DOTDIV          reduce using rule 64 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 64 (number -> FLOAT .)
    SEMICOLON       reduce using rule 64 (number -> FLOAT .)
    RSQBRACK        reduce using rule 64 (number -> FLOAT .)
    COMMA           reduce using rule 64 (number -> FLOAT .)
    RPARENT         reduce using rule 64 (number -> FLOAT .)
    SMALLER         reduce using rule 64 (number -> FLOAT .)
    LARGER          reduce using rule 64 (number -> FLOAT .)
    SMALLEREQ       reduce using rule 64 (number -> FLOAT .)
    LARGEREQ        reduce using rule 64 (number -> FLOAT .)
    NOTEQ           reduce using rule 64 (number -> FLOAT .)
    EQ              reduce using rule 64 (number -> FLOAT .)
    COLON           reduce using rule 64 (number -> FLOAT .)
    LCURLBRACK      reduce using rule 64 (number -> FLOAT .)
    ID              reduce using rule 64 (number -> FLOAT .)
    BREAK           reduce using rule 64 (number -> FLOAT .)
    CONTINUE        reduce using rule 64 (number -> FLOAT .)
    RETURN          reduce using rule 64 (number -> FLOAT .)
    PRINT           reduce using rule 64 (number -> FLOAT .)
    IF              reduce using rule 64 (number -> FLOAT .)
    FOR             reduce using rule 64 (number -> FLOAT .)
    WHILE           reduce using rule 64 (number -> FLOAT .)


state 42

    (66) matrix -> LSQBRACK . vectors RSQBRACK
    (71) vector -> LSQBRACK . numbers RSQBRACK
    (69) vectors -> . vectors COMMA vector
    (70) vectors -> . vector
    (72) numbers -> . numbers COMMA number
    (73) numbers -> . num_term
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (61) num_term -> . ID
    (62) num_term -> . number
    (63) number -> . INT
    (64) number -> . FLOAT

    LSQBRACK        shift and go to state 75
    ID              shift and go to state 60
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    vectors                        shift and go to state 76
    numbers                        shift and go to state 77
    vector                         shift and go to state 78
    number                         shift and go to state 62
    num_term                       shift and go to state 79

state 43

    (67) matrix -> vector .

    ADD             reduce using rule 67 (matrix -> vector .)
    SUB             reduce using rule 67 (matrix -> vector .)
    MUL             reduce using rule 67 (matrix -> vector .)
    DIV             reduce using rule 67 (matrix -> vector .)
    DOTADD          reduce using rule 67 (matrix -> vector .)
    DOTSUB          reduce using rule 67 (matrix -> vector .)
    DOTMUL          reduce using rule 67 (matrix -> vector .)
    DOTDIV          reduce using rule 67 (matrix -> vector .)
    TRANSPOSE       reduce using rule 67 (matrix -> vector .)
    SEMICOLON       reduce using rule 67 (matrix -> vector .)
    RPARENT         reduce using rule 67 (matrix -> vector .)
    SMALLER         reduce using rule 67 (matrix -> vector .)
    LARGER          reduce using rule 67 (matrix -> vector .)
    SMALLEREQ       reduce using rule 67 (matrix -> vector .)
    LARGEREQ        reduce using rule 67 (matrix -> vector .)
    NOTEQ           reduce using rule 67 (matrix -> vector .)
    EQ              reduce using rule 67 (matrix -> vector .)


state 44

    (68) matrix -> matrix_fun .

    ADD             reduce using rule 68 (matrix -> matrix_fun .)
    SUB             reduce using rule 68 (matrix -> matrix_fun .)
    MUL             reduce using rule 68 (matrix -> matrix_fun .)
    DIV             reduce using rule 68 (matrix -> matrix_fun .)
    DOTADD          reduce using rule 68 (matrix -> matrix_fun .)
    DOTSUB          reduce using rule 68 (matrix -> matrix_fun .)
    DOTMUL          reduce using rule 68 (matrix -> matrix_fun .)
    DOTDIV          reduce using rule 68 (matrix -> matrix_fun .)
    TRANSPOSE       reduce using rule 68 (matrix -> matrix_fun .)
    SEMICOLON       reduce using rule 68 (matrix -> matrix_fun .)
    RPARENT         reduce using rule 68 (matrix -> matrix_fun .)
    SMALLER         reduce using rule 68 (matrix -> matrix_fun .)
    LARGER          reduce using rule 68 (matrix -> matrix_fun .)
    SMALLEREQ       reduce using rule 68 (matrix -> matrix_fun .)
    LARGEREQ        reduce using rule 68 (matrix -> matrix_fun .)
    NOTEQ           reduce using rule 68 (matrix -> matrix_fun .)
    EQ              reduce using rule 68 (matrix -> matrix_fun .)


state 45

    (65) string -> STRING .

    ADD             reduce using rule 65 (string -> STRING .)
    SUB             reduce using rule 65 (string -> STRING .)
    MUL             reduce using rule 65 (string -> STRING .)
    DIV             reduce using rule 65 (string -> STRING .)
    DOTADD          reduce using rule 65 (string -> STRING .)
    DOTSUB          reduce using rule 65 (string -> STRING .)
    DOTMUL          reduce using rule 65 (string -> STRING .)
    DOTDIV          reduce using rule 65 (string -> STRING .)
    TRANSPOSE       reduce using rule 65 (string -> STRING .)
    SEMICOLON       reduce using rule 65 (string -> STRING .)
    RPARENT         reduce using rule 65 (string -> STRING .)
    SMALLER         reduce using rule 65 (string -> STRING .)
    LARGER          reduce using rule 65 (string -> STRING .)
    SMALLEREQ       reduce using rule 65 (string -> STRING .)
    LARGEREQ        reduce using rule 65 (string -> STRING .)
    NOTEQ           reduce using rule 65 (string -> STRING .)
    EQ              reduce using rule 65 (string -> STRING .)


state 46

    (45) matrix_fun -> fun_name . LPARENT expression RPARENT

    LPARENT         shift and go to state 80


state 47

    (46) fun_name -> EYE .

    LPARENT         reduce using rule 46 (fun_name -> EYE .)


state 48

    (47) fun_name -> ZEROS .

    LPARENT         reduce using rule 47 (fun_name -> ZEROS .)


state 49

    (48) fun_name -> ONES .

    LPARENT         reduce using rule 48 (fun_name -> ONES .)


state 50

    (40) call -> PRINT print_inputs .
    (41) print_inputs -> print_inputs . COMMA print_input

    SEMICOLON       reduce using rule 40 (call -> PRINT print_inputs .)
    COMMA           shift and go to state 81


state 51

    (42) print_inputs -> print_input .

    COMMA           reduce using rule 42 (print_inputs -> print_input .)
    SEMICOLON       reduce using rule 42 (print_inputs -> print_input .)


state 52

    (43) print_input -> STRING .

    COMMA           reduce using rule 43 (print_input -> STRING .)
    SEMICOLON       reduce using rule 43 (print_input -> STRING .)


state 53

    (44) print_input -> ID .

    COMMA           reduce using rule 44 (print_input -> ID .)
    SEMICOLON       reduce using rule 44 (print_input -> ID .)


state 54

    (54) branch -> IF LPARENT . comparison RPARENT instruction
    (55) branch -> IF LPARENT . comparison RPARENT instruction ELSE instruction
    (30) comparison -> . expression comparison_operator expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    comparison                     shift and go to state 82
    expression                     shift and go to state 83
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 55

    (51) for -> FOR for_expression . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instruction                    shift and go to state 84
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 56

    (52) for_expression -> ID . ASSIGN range

    ASSIGN          shift and go to state 85


state 57

    (53) while -> WHILE LPARENT . comparison RPARENT instruction
    (30) comparison -> . expression comparison_operator expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    comparison                     shift and go to state 86
    expression                     shift and go to state 83
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 58

    (8) instruction -> LCURLBRACK instructions RCURLBRACK .

    LCURLBRACK      reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    ID              reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    BREAK           reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    CONTINUE        reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    RETURN          reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    PRINT           reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    IF              reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    FOR             reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    WHILE           reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    $end            reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    RCURLBRACK      reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)
    ELSE            reduce using rule 8 (instruction -> LCURLBRACK instructions RCURLBRACK .)


state 59

    (9) assignment -> ID assignment_operator expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    SEMICOLON       reduce using rule 9 (assignment -> ID assignment_operator expression .)
    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72


state 60

    (61) num_term -> ID .

    RSQBRACK        reduce using rule 61 (num_term -> ID .)
    COMMA           reduce using rule 61 (num_term -> ID .)
    COLON           reduce using rule 61 (num_term -> ID .)
    LCURLBRACK      reduce using rule 61 (num_term -> ID .)
    ID              reduce using rule 61 (num_term -> ID .)
    BREAK           reduce using rule 61 (num_term -> ID .)
    CONTINUE        reduce using rule 61 (num_term -> ID .)
    RETURN          reduce using rule 61 (num_term -> ID .)
    PRINT           reduce using rule 61 (num_term -> ID .)
    IF              reduce using rule 61 (num_term -> ID .)
    FOR             reduce using rule 61 (num_term -> ID .)
    WHILE           reduce using rule 61 (num_term -> ID .)


state 61

    (11) ref -> ID LSQBRACK num_term . RSQBRACK
    (12) ref -> ID LSQBRACK num_term . COMMA num_term RSQBRACK

    RSQBRACK        shift and go to state 87
    COMMA           shift and go to state 88


state 62

    (62) num_term -> number .

    RSQBRACK        reduce using rule 62 (num_term -> number .)
    COMMA           reduce using rule 62 (num_term -> number .)
    COLON           reduce using rule 62 (num_term -> number .)
    LCURLBRACK      reduce using rule 62 (num_term -> number .)
    ID              reduce using rule 62 (num_term -> number .)
    BREAK           reduce using rule 62 (num_term -> number .)
    CONTINUE        reduce using rule 62 (num_term -> number .)
    RETURN          reduce using rule 62 (num_term -> number .)
    PRINT           reduce using rule 62 (num_term -> number .)
    IF              reduce using rule 62 (num_term -> number .)
    FOR             reduce using rule 62 (num_term -> number .)
    WHILE           reduce using rule 62 (num_term -> number .)


state 63

    (10) assignment -> ref assignment_operator expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    SEMICOLON       reduce using rule 10 (assignment -> ref assignment_operator expression .)
    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72


state 64

    (20) expression -> expression ADD . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 89
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 65

    (21) expression -> expression SUB . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 90
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 66

    (22) expression -> expression MUL . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 91
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 67

    (23) expression -> expression DIV . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 92
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 68

    (24) expression -> expression DOTADD . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 93
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 69

    (25) expression -> expression DOTSUB . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 94
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 70

    (26) expression -> expression DOTMUL . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 95
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 71

    (27) expression -> expression DOTDIV . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 96
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 72

    (29) expression -> expression TRANSPOSE .

    ADD             reduce using rule 29 (expression -> expression TRANSPOSE .)
    SUB             reduce using rule 29 (expression -> expression TRANSPOSE .)
    MUL             reduce using rule 29 (expression -> expression TRANSPOSE .)
    DIV             reduce using rule 29 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 29 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 29 (expression -> expression TRANSPOSE .)
    DOTMUL          reduce using rule 29 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 29 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 29 (expression -> expression TRANSPOSE .)
    SEMICOLON       reduce using rule 29 (expression -> expression TRANSPOSE .)
    RPARENT         reduce using rule 29 (expression -> expression TRANSPOSE .)
    SMALLER         reduce using rule 29 (expression -> expression TRANSPOSE .)
    LARGER          reduce using rule 29 (expression -> expression TRANSPOSE .)
    SMALLEREQ       reduce using rule 29 (expression -> expression TRANSPOSE .)
    LARGEREQ        reduce using rule 29 (expression -> expression TRANSPOSE .)
    NOTEQ           reduce using rule 29 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 29 (expression -> expression TRANSPOSE .)


state 73

    (19) expression -> LPARENT expression . RPARENT
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    RPARENT         shift and go to state 97
    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72


state 74

    (28) expression -> SUB expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 28 (expression -> SUB expression .)
    SUB             reduce using rule 28 (expression -> SUB expression .)
    MUL             reduce using rule 28 (expression -> SUB expression .)
    DIV             reduce using rule 28 (expression -> SUB expression .)
    DOTADD          reduce using rule 28 (expression -> SUB expression .)
    DOTSUB          reduce using rule 28 (expression -> SUB expression .)
    DOTMUL          reduce using rule 28 (expression -> SUB expression .)
    DOTDIV          reduce using rule 28 (expression -> SUB expression .)
    SEMICOLON       reduce using rule 28 (expression -> SUB expression .)
    RPARENT         reduce using rule 28 (expression -> SUB expression .)
    SMALLER         reduce using rule 28 (expression -> SUB expression .)
    LARGER          reduce using rule 28 (expression -> SUB expression .)
    SMALLEREQ       reduce using rule 28 (expression -> SUB expression .)
    LARGEREQ        reduce using rule 28 (expression -> SUB expression .)
    NOTEQ           reduce using rule 28 (expression -> SUB expression .)
    EQ              reduce using rule 28 (expression -> SUB expression .)
    TRANSPOSE       shift and go to state 72

  ! TRANSPOSE       [ reduce using rule 28 (expression -> SUB expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! MUL             [ shift and go to state 66 ]
  ! DIV             [ shift and go to state 67 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 71 ]


state 75

    (71) vector -> LSQBRACK . numbers RSQBRACK
    (72) numbers -> . numbers COMMA number
    (73) numbers -> . num_term
    (61) num_term -> . ID
    (62) num_term -> . number
    (63) number -> . INT
    (64) number -> . FLOAT

    ID              shift and go to state 60
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    numbers                        shift and go to state 77
    number                         shift and go to state 62
    num_term                       shift and go to state 79

state 76

    (66) matrix -> LSQBRACK vectors . RSQBRACK
    (69) vectors -> vectors . COMMA vector

    RSQBRACK        shift and go to state 98
    COMMA           shift and go to state 99


state 77

    (71) vector -> LSQBRACK numbers . RSQBRACK
    (72) numbers -> numbers . COMMA number

    RSQBRACK        shift and go to state 100
    COMMA           shift and go to state 101


state 78

    (70) vectors -> vector .

    RSQBRACK        reduce using rule 70 (vectors -> vector .)
    COMMA           reduce using rule 70 (vectors -> vector .)


state 79

    (73) numbers -> num_term .

    RSQBRACK        reduce using rule 73 (numbers -> num_term .)
    COMMA           reduce using rule 73 (numbers -> num_term .)


state 80

    (45) matrix_fun -> fun_name LPARENT . expression RPARENT
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    fun_name                       shift and go to state 46
    expression                     shift and go to state 102
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44

state 81

    (41) print_inputs -> print_inputs COMMA . print_input
    (43) print_input -> . STRING
    (44) print_input -> . ID

    STRING          shift and go to state 52
    ID              shift and go to state 53

    print_input                    shift and go to state 103

state 82

    (54) branch -> IF LPARENT comparison . RPARENT instruction
    (55) branch -> IF LPARENT comparison . RPARENT instruction ELSE instruction

    RPARENT         shift and go to state 104


state 83

    (30) comparison -> expression . comparison_operator expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE
    (31) comparison_operator -> . SMALLER
    (32) comparison_operator -> . LARGER
    (33) comparison_operator -> . SMALLEREQ
    (34) comparison_operator -> . LARGEREQ
    (35) comparison_operator -> . NOTEQ
    (36) comparison_operator -> . EQ

    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72
    SMALLER         shift and go to state 106
    LARGER          shift and go to state 107
    SMALLEREQ       shift and go to state 108
    LARGEREQ        shift and go to state 109
    NOTEQ           shift and go to state 110
    EQ              shift and go to state 111

    comparison_operator            shift and go to state 105

state 84

    (51) for -> FOR for_expression instruction .

    LCURLBRACK      reduce using rule 51 (for -> FOR for_expression instruction .)
    ID              reduce using rule 51 (for -> FOR for_expression instruction .)
    BREAK           reduce using rule 51 (for -> FOR for_expression instruction .)
    CONTINUE        reduce using rule 51 (for -> FOR for_expression instruction .)
    RETURN          reduce using rule 51 (for -> FOR for_expression instruction .)
    PRINT           reduce using rule 51 (for -> FOR for_expression instruction .)
    IF              reduce using rule 51 (for -> FOR for_expression instruction .)
    FOR             reduce using rule 51 (for -> FOR for_expression instruction .)
    WHILE           reduce using rule 51 (for -> FOR for_expression instruction .)
    $end            reduce using rule 51 (for -> FOR for_expression instruction .)
    RCURLBRACK      reduce using rule 51 (for -> FOR for_expression instruction .)
    ELSE            reduce using rule 51 (for -> FOR for_expression instruction .)


state 85

    (52) for_expression -> ID ASSIGN . range
    (56) range -> . num_term COLON num_term
    (61) num_term -> . ID
    (62) num_term -> . number
    (63) number -> . INT
    (64) number -> . FLOAT

    ID              shift and go to state 60
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    range                          shift and go to state 112
    num_term                       shift and go to state 113
    number                         shift and go to state 62

state 86

    (53) while -> WHILE LPARENT comparison . RPARENT instruction

    RPARENT         shift and go to state 114


state 87

    (11) ref -> ID LSQBRACK num_term RSQBRACK .

    ASSIGN          reduce using rule 11 (ref -> ID LSQBRACK num_term RSQBRACK .)
    ADDASSIGN       reduce using rule 11 (ref -> ID LSQBRACK num_term RSQBRACK .)
    SUBASSIGN       reduce using rule 11 (ref -> ID LSQBRACK num_term RSQBRACK .)
    MULASSIGN       reduce using rule 11 (ref -> ID LSQBRACK num_term RSQBRACK .)
    DIVASSIGN       reduce using rule 11 (ref -> ID LSQBRACK num_term RSQBRACK .)


state 88

    (12) ref -> ID LSQBRACK num_term COMMA . num_term RSQBRACK
    (61) num_term -> . ID
    (62) num_term -> . number
    (63) number -> . INT
    (64) number -> . FLOAT

    ID              shift and go to state 60
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    num_term                       shift and go to state 115
    number                         shift and go to state 62

state 89

    (20) expression -> expression ADD expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 20 (expression -> expression ADD expression .)
    SUB             reduce using rule 20 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 20 (expression -> expression ADD expression .)
    DOTSUB          reduce using rule 20 (expression -> expression ADD expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression ADD expression .)
    RPARENT         reduce using rule 20 (expression -> expression ADD expression .)
    SMALLER         reduce using rule 20 (expression -> expression ADD expression .)
    LARGER          reduce using rule 20 (expression -> expression ADD expression .)
    SMALLEREQ       reduce using rule 20 (expression -> expression ADD expression .)
    LARGEREQ        reduce using rule 20 (expression -> expression ADD expression .)
    NOTEQ           reduce using rule 20 (expression -> expression ADD expression .)
    EQ              reduce using rule 20 (expression -> expression ADD expression .)
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72

  ! MUL             [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! DOTMUL          [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! DOTDIV          [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]


state 90

    (21) expression -> expression SUB expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 21 (expression -> expression SUB expression .)
    SUB             reduce using rule 21 (expression -> expression SUB expression .)
    DOTADD          reduce using rule 21 (expression -> expression SUB expression .)
    DOTSUB          reduce using rule 21 (expression -> expression SUB expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression SUB expression .)
    RPARENT         reduce using rule 21 (expression -> expression SUB expression .)
    SMALLER         reduce using rule 21 (expression -> expression SUB expression .)
    LARGER          reduce using rule 21 (expression -> expression SUB expression .)
    SMALLEREQ       reduce using rule 21 (expression -> expression SUB expression .)
    LARGEREQ        reduce using rule 21 (expression -> expression SUB expression .)
    NOTEQ           reduce using rule 21 (expression -> expression SUB expression .)
    EQ              reduce using rule 21 (expression -> expression SUB expression .)
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72

  ! MUL             [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! DOTMUL          [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! DOTDIV          [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]


state 91

    (22) expression -> expression MUL expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 22 (expression -> expression MUL expression .)
    SUB             reduce using rule 22 (expression -> expression MUL expression .)
    MUL             reduce using rule 22 (expression -> expression MUL expression .)
    DIV             reduce using rule 22 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 22 (expression -> expression MUL expression .)
    DOTSUB          reduce using rule 22 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 22 (expression -> expression MUL expression .)
    DOTDIV          reduce using rule 22 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression MUL expression .)
    RPARENT         reduce using rule 22 (expression -> expression MUL expression .)
    SMALLER         reduce using rule 22 (expression -> expression MUL expression .)
    LARGER          reduce using rule 22 (expression -> expression MUL expression .)
    SMALLEREQ       reduce using rule 22 (expression -> expression MUL expression .)
    LARGEREQ        reduce using rule 22 (expression -> expression MUL expression .)
    NOTEQ           reduce using rule 22 (expression -> expression MUL expression .)
    EQ              reduce using rule 22 (expression -> expression MUL expression .)
    TRANSPOSE       shift and go to state 72

  ! TRANSPOSE       [ reduce using rule 22 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! MUL             [ shift and go to state 66 ]
  ! DIV             [ shift and go to state 67 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 71 ]


state 92

    (23) expression -> expression DIV expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 23 (expression -> expression DIV expression .)
    SUB             reduce using rule 23 (expression -> expression DIV expression .)
    MUL             reduce using rule 23 (expression -> expression DIV expression .)
    DIV             reduce using rule 23 (expression -> expression DIV expression .)
    DOTADD          reduce using rule 23 (expression -> expression DIV expression .)
    DOTSUB          reduce using rule 23 (expression -> expression DIV expression .)
    DOTMUL          reduce using rule 23 (expression -> expression DIV expression .)
    DOTDIV          reduce using rule 23 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression DIV expression .)
    RPARENT         reduce using rule 23 (expression -> expression DIV expression .)
    SMALLER         reduce using rule 23 (expression -> expression DIV expression .)
    LARGER          reduce using rule 23 (expression -> expression DIV expression .)
    SMALLEREQ       reduce using rule 23 (expression -> expression DIV expression .)
    LARGEREQ        reduce using rule 23 (expression -> expression DIV expression .)
    NOTEQ           reduce using rule 23 (expression -> expression DIV expression .)
    EQ              reduce using rule 23 (expression -> expression DIV expression .)
    TRANSPOSE       shift and go to state 72

  ! TRANSPOSE       [ reduce using rule 23 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! MUL             [ shift and go to state 66 ]
  ! DIV             [ shift and go to state 67 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 71 ]


state 93

    (24) expression -> expression DOTADD expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 24 (expression -> expression DOTADD expression .)
    SUB             reduce using rule 24 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 24 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 24 (expression -> expression DOTADD expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression DOTADD expression .)
    RPARENT         reduce using rule 24 (expression -> expression DOTADD expression .)
    SMALLER         reduce using rule 24 (expression -> expression DOTADD expression .)
    LARGER          reduce using rule 24 (expression -> expression DOTADD expression .)
    SMALLEREQ       reduce using rule 24 (expression -> expression DOTADD expression .)
    LARGEREQ        reduce using rule 24 (expression -> expression DOTADD expression .)
    NOTEQ           reduce using rule 24 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 24 (expression -> expression DOTADD expression .)
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72

  ! MUL             [ reduce using rule 24 (expression -> expression DOTADD expression .) ]
  ! DIV             [ reduce using rule 24 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 24 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 24 (expression -> expression DOTADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 24 (expression -> expression DOTADD expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]


state 94

    (25) expression -> expression DOTSUB expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 25 (expression -> expression DOTSUB expression .)
    SUB             reduce using rule 25 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 25 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 25 (expression -> expression DOTSUB expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression DOTSUB expression .)
    RPARENT         reduce using rule 25 (expression -> expression DOTSUB expression .)
    SMALLER         reduce using rule 25 (expression -> expression DOTSUB expression .)
    LARGER          reduce using rule 25 (expression -> expression DOTSUB expression .)
    SMALLEREQ       reduce using rule 25 (expression -> expression DOTSUB expression .)
    LARGEREQ        reduce using rule 25 (expression -> expression DOTSUB expression .)
    NOTEQ           reduce using rule 25 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 25 (expression -> expression DOTSUB expression .)
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72

  ! MUL             [ reduce using rule 25 (expression -> expression DOTSUB expression .) ]
  ! DIV             [ reduce using rule 25 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 25 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> expression DOTSUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 25 (expression -> expression DOTSUB expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]


state 95

    (26) expression -> expression DOTMUL expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 26 (expression -> expression DOTMUL expression .)
    SUB             reduce using rule 26 (expression -> expression DOTMUL expression .)
    MUL             reduce using rule 26 (expression -> expression DOTMUL expression .)
    DIV             reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 26 (expression -> expression DOTMUL expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression DOTMUL expression .)
    RPARENT         reduce using rule 26 (expression -> expression DOTMUL expression .)
    SMALLER         reduce using rule 26 (expression -> expression DOTMUL expression .)
    LARGER          reduce using rule 26 (expression -> expression DOTMUL expression .)
    SMALLEREQ       reduce using rule 26 (expression -> expression DOTMUL expression .)
    LARGEREQ        reduce using rule 26 (expression -> expression DOTMUL expression .)
    NOTEQ           reduce using rule 26 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 26 (expression -> expression DOTMUL expression .)
    TRANSPOSE       shift and go to state 72

  ! TRANSPOSE       [ reduce using rule 26 (expression -> expression DOTMUL expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! MUL             [ shift and go to state 66 ]
  ! DIV             [ shift and go to state 67 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 71 ]


state 96

    (27) expression -> expression DOTDIV expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    ADD             reduce using rule 27 (expression -> expression DOTDIV expression .)
    SUB             reduce using rule 27 (expression -> expression DOTDIV expression .)
    MUL             reduce using rule 27 (expression -> expression DOTDIV expression .)
    DIV             reduce using rule 27 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 27 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 27 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 27 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 27 (expression -> expression DOTDIV expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression DOTDIV expression .)
    RPARENT         reduce using rule 27 (expression -> expression DOTDIV expression .)
    SMALLER         reduce using rule 27 (expression -> expression DOTDIV expression .)
    LARGER          reduce using rule 27 (expression -> expression DOTDIV expression .)
    SMALLEREQ       reduce using rule 27 (expression -> expression DOTDIV expression .)
    LARGEREQ        reduce using rule 27 (expression -> expression DOTDIV expression .)
    NOTEQ           reduce using rule 27 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 27 (expression -> expression DOTDIV expression .)
    TRANSPOSE       shift and go to state 72

  ! TRANSPOSE       [ reduce using rule 27 (expression -> expression DOTDIV expression .) ]
  ! ADD             [ shift and go to state 64 ]
  ! SUB             [ shift and go to state 65 ]
  ! MUL             [ shift and go to state 66 ]
  ! DIV             [ shift and go to state 67 ]
  ! DOTADD          [ shift and go to state 68 ]
  ! DOTSUB          [ shift and go to state 69 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 71 ]


state 97

    (19) expression -> LPARENT expression RPARENT .

    ADD             reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    SUB             reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    MUL             reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    DIV             reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    DOTADD          reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    DOTSUB          reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    DOTMUL          reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    DOTDIV          reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    TRANSPOSE       reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    SEMICOLON       reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    RPARENT         reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    SMALLER         reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    LARGER          reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    SMALLEREQ       reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    LARGEREQ        reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    NOTEQ           reduce using rule 19 (expression -> LPARENT expression RPARENT .)
    EQ              reduce using rule 19 (expression -> LPARENT expression RPARENT .)


state 98

    (66) matrix -> LSQBRACK vectors RSQBRACK .

    ADD             reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    SUB             reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    MUL             reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    DIV             reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    DOTADD          reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    DOTSUB          reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    DOTMUL          reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    DOTDIV          reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    TRANSPOSE       reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    SEMICOLON       reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    RPARENT         reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    SMALLER         reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    LARGER          reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    SMALLEREQ       reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    LARGEREQ        reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    NOTEQ           reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)
    EQ              reduce using rule 66 (matrix -> LSQBRACK vectors RSQBRACK .)


state 99

    (69) vectors -> vectors COMMA . vector
    (71) vector -> . LSQBRACK numbers RSQBRACK

    LSQBRACK        shift and go to state 75

    vector                         shift and go to state 116

state 100

    (71) vector -> LSQBRACK numbers RSQBRACK .

    ADD             reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    SUB             reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    MUL             reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    DIV             reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    DOTADD          reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    DOTSUB          reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    DOTMUL          reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    DOTDIV          reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    TRANSPOSE       reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    SEMICOLON       reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    RPARENT         reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    SMALLER         reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    LARGER          reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    SMALLEREQ       reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    LARGEREQ        reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    NOTEQ           reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    EQ              reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    RSQBRACK        reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)
    COMMA           reduce using rule 71 (vector -> LSQBRACK numbers RSQBRACK .)


state 101

    (72) numbers -> numbers COMMA . number
    (63) number -> . INT
    (64) number -> . FLOAT

    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    number                         shift and go to state 117

state 102

    (45) matrix_fun -> fun_name LPARENT expression . RPARENT
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    RPARENT         shift and go to state 118
    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72


state 103

    (41) print_inputs -> print_inputs COMMA print_input .

    COMMA           reduce using rule 41 (print_inputs -> print_inputs COMMA print_input .)
    SEMICOLON       reduce using rule 41 (print_inputs -> print_inputs COMMA print_input .)


state 104

    (54) branch -> IF LPARENT comparison RPARENT . instruction
    (55) branch -> IF LPARENT comparison RPARENT . instruction ELSE instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instruction                    shift and go to state 119
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 105

    (30) comparison -> expression comparison_operator . expression
    (18) expression -> . term
    (19) expression -> . LPARENT expression RPARENT
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression DOTADD expression
    (25) expression -> . expression DOTSUB expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTDIV expression
    (28) expression -> . SUB expression
    (29) expression -> . expression TRANSPOSE
    (57) term -> . ID
    (58) term -> . number
    (59) term -> . matrix
    (60) term -> . string
    (63) number -> . INT
    (64) number -> . FLOAT
    (66) matrix -> . LSQBRACK vectors RSQBRACK
    (67) matrix -> . vector
    (68) matrix -> . matrix_fun
    (65) string -> . STRING
    (71) vector -> . LSQBRACK numbers RSQBRACK
    (45) matrix_fun -> . fun_name LPARENT expression RPARENT
    (46) fun_name -> . EYE
    (47) fun_name -> . ZEROS
    (48) fun_name -> . ONES

    LPARENT         shift and go to state 34
    SUB             shift and go to state 35
    ID              shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    LSQBRACK        shift and go to state 42
    STRING          shift and go to state 45
    EYE             shift and go to state 47
    ZEROS           shift and go to state 48
    ONES            shift and go to state 49

    expression                     shift and go to state 120
    term                           shift and go to state 33
    number                         shift and go to state 37
    matrix                         shift and go to state 38
    string                         shift and go to state 39
    vector                         shift and go to state 43
    matrix_fun                     shift and go to state 44
    fun_name                       shift and go to state 46

state 106

    (31) comparison_operator -> SMALLER .

    LPARENT         reduce using rule 31 (comparison_operator -> SMALLER .)
    SUB             reduce using rule 31 (comparison_operator -> SMALLER .)
    ID              reduce using rule 31 (comparison_operator -> SMALLER .)
    INT             reduce using rule 31 (comparison_operator -> SMALLER .)
    FLOAT           reduce using rule 31 (comparison_operator -> SMALLER .)
    LSQBRACK        reduce using rule 31 (comparison_operator -> SMALLER .)
    STRING          reduce using rule 31 (comparison_operator -> SMALLER .)
    EYE             reduce using rule 31 (comparison_operator -> SMALLER .)
    ZEROS           reduce using rule 31 (comparison_operator -> SMALLER .)
    ONES            reduce using rule 31 (comparison_operator -> SMALLER .)


state 107

    (32) comparison_operator -> LARGER .

    LPARENT         reduce using rule 32 (comparison_operator -> LARGER .)
    SUB             reduce using rule 32 (comparison_operator -> LARGER .)
    ID              reduce using rule 32 (comparison_operator -> LARGER .)
    INT             reduce using rule 32 (comparison_operator -> LARGER .)
    FLOAT           reduce using rule 32 (comparison_operator -> LARGER .)
    LSQBRACK        reduce using rule 32 (comparison_operator -> LARGER .)
    STRING          reduce using rule 32 (comparison_operator -> LARGER .)
    EYE             reduce using rule 32 (comparison_operator -> LARGER .)
    ZEROS           reduce using rule 32 (comparison_operator -> LARGER .)
    ONES            reduce using rule 32 (comparison_operator -> LARGER .)


state 108

    (33) comparison_operator -> SMALLEREQ .

    LPARENT         reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    SUB             reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    ID              reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    INT             reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    FLOAT           reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    LSQBRACK        reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    STRING          reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    EYE             reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    ZEROS           reduce using rule 33 (comparison_operator -> SMALLEREQ .)
    ONES            reduce using rule 33 (comparison_operator -> SMALLEREQ .)


state 109

    (34) comparison_operator -> LARGEREQ .

    LPARENT         reduce using rule 34 (comparison_operator -> LARGEREQ .)
    SUB             reduce using rule 34 (comparison_operator -> LARGEREQ .)
    ID              reduce using rule 34 (comparison_operator -> LARGEREQ .)
    INT             reduce using rule 34 (comparison_operator -> LARGEREQ .)
    FLOAT           reduce using rule 34 (comparison_operator -> LARGEREQ .)
    LSQBRACK        reduce using rule 34 (comparison_operator -> LARGEREQ .)
    STRING          reduce using rule 34 (comparison_operator -> LARGEREQ .)
    EYE             reduce using rule 34 (comparison_operator -> LARGEREQ .)
    ZEROS           reduce using rule 34 (comparison_operator -> LARGEREQ .)
    ONES            reduce using rule 34 (comparison_operator -> LARGEREQ .)


state 110

    (35) comparison_operator -> NOTEQ .

    LPARENT         reduce using rule 35 (comparison_operator -> NOTEQ .)
    SUB             reduce using rule 35 (comparison_operator -> NOTEQ .)
    ID              reduce using rule 35 (comparison_operator -> NOTEQ .)
    INT             reduce using rule 35 (comparison_operator -> NOTEQ .)
    FLOAT           reduce using rule 35 (comparison_operator -> NOTEQ .)
    LSQBRACK        reduce using rule 35 (comparison_operator -> NOTEQ .)
    STRING          reduce using rule 35 (comparison_operator -> NOTEQ .)
    EYE             reduce using rule 35 (comparison_operator -> NOTEQ .)
    ZEROS           reduce using rule 35 (comparison_operator -> NOTEQ .)
    ONES            reduce using rule 35 (comparison_operator -> NOTEQ .)


state 111

    (36) comparison_operator -> EQ .

    LPARENT         reduce using rule 36 (comparison_operator -> EQ .)
    SUB             reduce using rule 36 (comparison_operator -> EQ .)
    ID              reduce using rule 36 (comparison_operator -> EQ .)
    INT             reduce using rule 36 (comparison_operator -> EQ .)
    FLOAT           reduce using rule 36 (comparison_operator -> EQ .)
    LSQBRACK        reduce using rule 36 (comparison_operator -> EQ .)
    STRING          reduce using rule 36 (comparison_operator -> EQ .)
    EYE             reduce using rule 36 (comparison_operator -> EQ .)
    ZEROS           reduce using rule 36 (comparison_operator -> EQ .)
    ONES            reduce using rule 36 (comparison_operator -> EQ .)


state 112

    (52) for_expression -> ID ASSIGN range .

    LCURLBRACK      reduce using rule 52 (for_expression -> ID ASSIGN range .)
    ID              reduce using rule 52 (for_expression -> ID ASSIGN range .)
    BREAK           reduce using rule 52 (for_expression -> ID ASSIGN range .)
    CONTINUE        reduce using rule 52 (for_expression -> ID ASSIGN range .)
    RETURN          reduce using rule 52 (for_expression -> ID ASSIGN range .)
    PRINT           reduce using rule 52 (for_expression -> ID ASSIGN range .)
    IF              reduce using rule 52 (for_expression -> ID ASSIGN range .)
    FOR             reduce using rule 52 (for_expression -> ID ASSIGN range .)
    WHILE           reduce using rule 52 (for_expression -> ID ASSIGN range .)


state 113

    (56) range -> num_term . COLON num_term

    COLON           shift and go to state 121


state 114

    (53) while -> WHILE LPARENT comparison RPARENT . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instruction                    shift and go to state 122
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 115

    (12) ref -> ID LSQBRACK num_term COMMA num_term . RSQBRACK

    RSQBRACK        shift and go to state 123


state 116

    (69) vectors -> vectors COMMA vector .

    RSQBRACK        reduce using rule 69 (vectors -> vectors COMMA vector .)
    COMMA           reduce using rule 69 (vectors -> vectors COMMA vector .)


state 117

    (72) numbers -> numbers COMMA number .

    RSQBRACK        reduce using rule 72 (numbers -> numbers COMMA number .)
    COMMA           reduce using rule 72 (numbers -> numbers COMMA number .)


state 118

    (45) matrix_fun -> fun_name LPARENT expression RPARENT .

    ADD             reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SUB             reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    MUL             reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DIV             reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTADD          reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTSUB          reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTMUL          reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    DOTDIV          reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    TRANSPOSE       reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SEMICOLON       reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    RPARENT         reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SMALLER         reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    LARGER          reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    SMALLEREQ       reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    LARGEREQ        reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    NOTEQ           reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)
    EQ              reduce using rule 45 (matrix_fun -> fun_name LPARENT expression RPARENT .)


state 119

    (54) branch -> IF LPARENT comparison RPARENT instruction .
    (55) branch -> IF LPARENT comparison RPARENT instruction . ELSE instruction

    LCURLBRACK      reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    ID              reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    BREAK           reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    CONTINUE        reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    RETURN          reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    PRINT           reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    IF              reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    FOR             reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    WHILE           reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    $end            reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    RCURLBRACK      reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .)
    ELSE            shift and go to state 124

  ! ELSE            [ reduce using rule 54 (branch -> IF LPARENT comparison RPARENT instruction .) ]


state 120

    (30) comparison -> expression comparison_operator expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . DOTADD expression
    (25) expression -> expression . DOTSUB expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTDIV expression
    (29) expression -> expression . TRANSPOSE

    RPARENT         reduce using rule 30 (comparison -> expression comparison_operator expression .)
    ADD             shift and go to state 64
    SUB             shift and go to state 65
    MUL             shift and go to state 66
    DIV             shift and go to state 67
    DOTADD          shift and go to state 68
    DOTSUB          shift and go to state 69
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 71
    TRANSPOSE       shift and go to state 72


state 121

    (56) range -> num_term COLON . num_term
    (61) num_term -> . ID
    (62) num_term -> . number
    (63) number -> . INT
    (64) number -> . FLOAT

    ID              shift and go to state 60
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    num_term                       shift and go to state 125
    number                         shift and go to state 62

state 122

    (53) while -> WHILE LPARENT comparison RPARENT instruction .

    LCURLBRACK      reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    ID              reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    BREAK           reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    CONTINUE        reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    RETURN          reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    PRINT           reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    IF              reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    FOR             reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    WHILE           reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    $end            reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    RCURLBRACK      reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)
    ELSE            reduce using rule 53 (while -> WHILE LPARENT comparison RPARENT instruction .)


state 123

    (12) ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK .

    ASSIGN          reduce using rule 12 (ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK .)
    ADDASSIGN       reduce using rule 12 (ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK .)
    SUBASSIGN       reduce using rule 12 (ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK .)
    MULASSIGN       reduce using rule 12 (ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK .)
    DIVASSIGN       reduce using rule 12 (ref -> ID LSQBRACK num_term COMMA num_term RSQBRACK .)


state 124

    (55) branch -> IF LPARENT comparison RPARENT instruction ELSE . instruction
    (4) instruction -> . assignment SEMICOLON
    (5) instruction -> . call SEMICOLON
    (6) instruction -> . loop
    (7) instruction -> . branch
    (8) instruction -> . LCURLBRACK instructions RCURLBRACK
    (9) assignment -> . ID assignment_operator expression
    (10) assignment -> . ref assignment_operator expression
    (37) call -> . BREAK
    (38) call -> . CONTINUE
    (39) call -> . RETURN expression
    (40) call -> . PRINT print_inputs
    (49) loop -> . for
    (50) loop -> . while
    (54) branch -> . IF LPARENT comparison RPARENT instruction
    (55) branch -> . IF LPARENT comparison RPARENT instruction ELSE instruction
    (11) ref -> . ID LSQBRACK num_term RSQBRACK
    (12) ref -> . ID LSQBRACK num_term COMMA num_term RSQBRACK
    (51) for -> . FOR for_expression instruction
    (53) while -> . WHILE LPARENT comparison RPARENT instruction

    LCURLBRACK      shift and go to state 8
    ID              shift and go to state 9
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    instruction                    shift and go to state 126
    assignment                     shift and go to state 4
    call                           shift and go to state 5
    loop                           shift and go to state 6
    branch                         shift and go to state 7
    ref                            shift and go to state 10
    for                            shift and go to state 15
    while                          shift and go to state 16

state 125

    (56) range -> num_term COLON num_term .

    LCURLBRACK      reduce using rule 56 (range -> num_term COLON num_term .)
    ID              reduce using rule 56 (range -> num_term COLON num_term .)
    BREAK           reduce using rule 56 (range -> num_term COLON num_term .)
    CONTINUE        reduce using rule 56 (range -> num_term COLON num_term .)
    RETURN          reduce using rule 56 (range -> num_term COLON num_term .)
    PRINT           reduce using rule 56 (range -> num_term COLON num_term .)
    IF              reduce using rule 56 (range -> num_term COLON num_term .)
    FOR             reduce using rule 56 (range -> num_term COLON num_term .)
    WHILE           reduce using rule 56 (range -> num_term COLON num_term .)


state 126

    (55) branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .

    LCURLBRACK      reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    ID              reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    BREAK           reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    CONTINUE        reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    RETURN          reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    PRINT           reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    IF              reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    FOR             reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    WHILE           reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    $end            reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    RCURLBRACK      reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)
    ELSE            reduce using rule 55 (branch -> IF LPARENT comparison RPARENT instruction ELSE instruction .)

